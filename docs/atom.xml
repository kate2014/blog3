
  <?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:base="https://blog.tommyku.com/">
  <id>https://blog.tommyku.com/</id>
  <title>Tommy Ku's Method Stub</title>
  <updated>2018-01-12T16:00:00Z</updated>
  <link rel="alternate" href="https://blog.tommyku.com/"/>
  <link rel="self" href="https://blog.tommyku.com/atom.xml"/>
  <author>
    <name>Tommy Ku</name>
    <uri>https://blog.tommyku.com</uri>
  </author>
  <entry>
    <id>tag:blog.tommyku.com,2018-01-12:/blog/communication-between-cpp-and-php-program-using-socket/</id>
    <title type="html">Communication between C++ and PHP program using socket</title>
    <published>2018-01-12T16:00:00Z</published>
    <updated>2018-01-12T16:00:00Z</updated>
    <link rel="alternate" href="https://blog.tommyku.com/blog/communication-between-cpp-and-php-program-using-socket/"/>
    <content type="html">
&lt;h2 id="background"&gt;Background&lt;/h2&gt;

&lt;p&gt;In a recent job, I had to integrate a piece of hardware with my
PHP server. The only library available was written in C and Java, yet
it’s unreasonable to port the whole PHP application just because it
lacks the library to communicate with the hardware.&lt;/p&gt;

&lt;p&gt;Then I came up with an idea of writting a C++ application to bridge the
hardware and the PHP application. The C++ application can use the
library, no problem, but how could I let my C++ and my PHP applications
communicate?&lt;/p&gt;

&lt;p&gt;I chose to use socket because it’s straightforward to implement and
reliable enough (for TCP) for my little application that exchanges only
short texts per transaction.&lt;/p&gt;

&lt;p&gt;In this short post, I will go over writing a C++ server and a PHP
client that communicate using socket. Demo code can be found on
&lt;a href="https://github.com/tommyku/cpp-php-socket-demo"&gt;tommyku/cpp-php-socket-demo&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id="c-server"&gt;C++ Server&lt;/h2&gt;

&lt;p&gt;Our C++ server is a simple echo server — it echos back to the
client whatever it receives.&lt;/p&gt;

&lt;p&gt;First, we need to include some libraries.&lt;/p&gt;

&lt;pre&gt;&lt;code class="language-cpp"&gt;#include &amp;lt;arpa/inet.h&amp;gt;
#include &amp;lt;stdio.h&amp;gt;
#include &amp;lt;stdlib.h&amp;gt;
#include &amp;lt;string.h&amp;gt;
#include &amp;lt;sys/types.h&amp;gt;
#include &amp;lt;sys/socket.h&amp;gt;
#include &amp;lt;unistd.h&amp;gt;
#include &amp;lt;signal.h&amp;gt;

using namespace std;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Next I create a signal handler to handle &lt;code&gt;SIGTERM&lt;/code&gt;, &lt;code&gt;SIGKILL&lt;/code&gt; and &lt;code&gt;SIGINT&lt;/code&gt;.
This handler becomes useful when I ran my server as a daemon in the background
because I can clean things up such as removing wthe socket file and flushing the log buffer
here when the application closes. Note I made the socket file descriptor &lt;code&gt;server&lt;/code&gt;
global so that the signal handler can access it outside of the &lt;code&gt;main&lt;/code&gt; function.&lt;/p&gt;

&lt;pre&gt;&lt;code class="language-cpp"&gt;#define SOCKET_FILENAME "/tmp/server.sock"

int server;

void signal_callback_handler(int signum)
{
  // close server
  close(server);
  // remove the socket file
  unlink(SOCKET_FILENAME);
  // signal handled
  exit(0);
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Here goes the rest of the application.&lt;/p&gt;

&lt;pre&gt;&lt;code class="language-cpp"&gt;int main(int argc, char **argv)
{
  struct sockaddr_un server_addr, client_addr;
  socklen_t clientlen = sizeof(client_addr);
  int client, buflen, nread;
  char *buf;

  puts("Hell World");

  // listen to SIGINT, SIGTERM, and SIGKILL
  signal(SIGINT, signal_callback_handler);
  signal(SIGTERM, signal_callback_handler);
  signal(SIGKILL, signal_callback_handler);

  // setup socket address structure
  memset(&amp;amp;server_addr, 0, sizeof(server_addr));
  server_addr.sun_family = AF_UNIX;
  strcpy(server_addr.sun_path, SOCKET_FILENAME);

  // create socket
  server = socket(PF_UNIX, SOCK_STREAM, 0);
  if (!server) {
    perror("socket");
    exit(-1);
  }

  // call bind to associate the socket with our local address and
  // port
  if (bind(server, (const struct sockaddr *)&amp;amp;server_addr, sizeof(server_addr)) &amp;lt; 0) {
    perror("bind");
    exit(-1);
  }

  // convert the socket to listen for incoming connections
  if (listen(server, 0) &amp;lt; 0) {
    perror("listen");
    exit(-1);
  }

  puts("Listening to connection...");

  // allocate buffer
  buflen = 1024;
  buf = new char[buflen+1];

  // loop to handle all requests
  while (1) {
    unsigned int client = accept(server, (struct sockaddr *)&amp;amp;client_addr, &amp;amp;clientlen);

    // read a request
    memset(buf, 0, buflen);
    nread = recv(client, buf, buflen, 0);

    printf("\nClient says: %s\n\n", buf);

    // echo back to the client
    send(client, buf, nread, 0);

    close(client);
  }

  close(server);

  unlink(SOCKET_FILENAME);

return 0;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;At first you create a socket file descriptor with socket domain and type,
which hasn’t been bind to anything yet. Then you bind it to a specific address described in
&lt;code&gt;server_addr&lt;/code&gt;. After that, you put the socket in passive mode which
waits for clients to approach and make connection.&lt;/p&gt;

&lt;p&gt;When creating a socket, I had to made a design decision whether to use
UNIX domain or Internet domain when creating my socket.&lt;/p&gt;

&lt;p&gt;UNIX domain (using PF_UNIX when creating socket) is a component of
POSIX, so it’s internal of the host and does not require (de)encapsulation
of the internet and network layer of TCP/IP. Therefore, it’s more
efficient for IPC and more secure as other devices in the LAN cannot tap
into this socket.&lt;/p&gt;

&lt;p&gt;On the other hand, Internet domain is just like UNIX domain but the
socket is binded to an address and a port instead of a socket file as in
UNIX domain. It works like UNIX domain socket but other devices in the LAN
can connect to this socket (depending on your firewall setting).&lt;/p&gt;

&lt;p&gt;Since the purpose of this socket is purely for interprocess
communication, there is no need to expose the port to outside devices,
so I chose to create my socket in UNIX domain.&lt;/p&gt;

&lt;p&gt;In the infinite while loop, the program accepts connection from a
client, and use &lt;code&gt;recv&lt;/code&gt; to read the content sent by the client. After
doing something with the content received (in this program it does
nothing), &lt;code&gt;sent&lt;/code&gt; is used to send a reply to the client.&lt;/p&gt;

&lt;pre&gt;&lt;code class="language-cpp"&gt;  while (1) {
    unsigned int client = accept(server, (struct sockaddr *)&amp;amp;client_addr, &amp;amp;clientlen);
    // rest of the code...
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id="php-client"&gt;PHP Client&lt;/h2&gt;

&lt;p&gt;The PHP code does pretty much the similar thing. Except that instead of
binding to a socket, it connects to a socket that’s already opened by
the C++ program. It will send a message, wait for the first reply while the
C++ program does it’s thing, and then terminate.&lt;/p&gt;

&lt;pre&gt;&lt;code class="language-php"&gt;&amp;lt;?php
error_reporting(E_ALL);

if(!($sock = socket_create(AF_UNIX, SOCK_STREAM, 0)))
{
    $errorcode = socket_last_error();
    $errormsg = socket_strerror($errorcode);

    die("Couldn't create socket: [$errorcode] $errormsg \n");
}

echo "Socket created";

if(!socket_connect($sock , '/tmp/server.sock'))
{
    $errorcode = socket_last_error();
    $errormsg = socket_strerror($errorcode);
    die("Could not connect: [$errorcode] $errormsg \n");
}

echo "Connection established \n";

$message = $argv[1];

if(!socket_send( $sock , $message , strlen($message) , 0))
{
    $errorcode = socket_last_error();
    $errormsg = socket_strerror($errorcode);

    die("Could not send data: [$errorcode] $errormsg \n");
}

echo "Message send successfully \n";

// Now receive reply from server
if(socket_recv( $sock , $buf , 1024, MSG_WAITALL ) === FALSE)
{
    $errorcode = socket_last_error();
    $errormsg = socket_strerror($errorcode);
    die("Could not receive data: [$errorcode] $errormsg \n");
}

echo "Message received \n";

// print the received message
var_dump($buf);

socket_close($sock);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;One thing to note if you’re like me who develops the PHP application in
a docker container which has a separate file system from the host is
that you need to mount the directory where your socket file resides in
the host into the docker container. Otherwise, you may scratch your head
like I did when &lt;code&gt;socket_connect&lt;/code&gt; reports: &lt;code&gt;socket_connect(): unable to connect [2]: No such file or directory&lt;/code&gt;&lt;/p&gt;

&lt;h2 id="accepting-one-connection-at-a-time"&gt;Accepting one connection at a time&lt;/h2&gt;

&lt;p&gt;As the hardware I was working with prohibits parallelism, only one
request should be handled by it at a time. It was tempting for me to
leave the socket open and push the requests into a queue, but how’d the
C++ program know if one request is still valid without the PHP program
first look at the respond of the last request?&lt;/p&gt;

&lt;p&gt;As a result, I simply closed the socket once a connection is established
and something is being sent in. The program handles the requets, send a
response back and then binds to the socket again.&lt;/p&gt;

&lt;p&gt;To do so, we define a function &lt;code&gt;bind_listen_socket&lt;/code&gt; that wraps all the
code needed to create, bind and listen to a socket. This function will
be called when the program starts and after a request has been
processed. This piece of code was originally in &lt;code&gt;main&lt;/code&gt; but now it’s
being moved to a function.&lt;/p&gt;

&lt;pre&gt;&lt;code class="language-cpp"&gt;#include &amp;lt;arpa/inet.h&amp;gt;
#include &amp;lt;stdio.h&amp;gt;
#include &amp;lt;stdlib.h&amp;gt;
#include &amp;lt;string.h&amp;gt;
#include &amp;lt;sys/types.h&amp;gt;
#include &amp;lt;sys/socket.h&amp;gt;
#include &amp;lt;sys/un.h&amp;gt;
#include &amp;lt;unistd.h&amp;gt;
#include &amp;lt;signal.h&amp;gt;

using namespace std;

#define SOCKET_FILENAME "/tmp/server.sock"

int server;

void bind_listen_socket(int &amp;amp;server, sockaddr_un &amp;amp;server_addr)
{
  // create socket
  server = socket(PF_UNIX, SOCK_STREAM, 0);
  if (!server) {
    perror("socket");
    exit(-1);
  }

  // call bind to associate the socket with our local address and
  // port
  if (bind(server, (const struct sockaddr *)&amp;amp;server_addr, sizeof(server_addr)) &amp;lt; 0) {
    perror("bind");
    exit(-1);
  }

  // convert the socket to listen for incoming connections
  if (listen(server, 0) &amp;lt; 0) {
    perror("listen");
    exit(-1);
  }

  puts("Listening to connection...");

}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The rest of the program remains similar to the orginal version, however
it calls &lt;code&gt;bind_listen_socket&lt;/code&gt; whenever it wants to create, bind and
listen to a socket. Moreover, the socket file descriptor is closed and
the socket file removed once there is a request coming in from a client.&lt;/p&gt;

&lt;pre&gt;&lt;code class="language-cpp"&gt;void signal_callback_handler(int signum)
{
  // close server
  close(server);
  // remove the socket file
  unlink(SOCKET_FILENAME);
  // signal handled
  exit(0);
}

int main(int argc, char **argv)
{
  struct sockaddr_un server_addr, client_addr;
  socklen_t clientlen = sizeof(client_addr);
  int client, buflen, nread;
  char *buf;

  puts("Hell World");

  // listen to SIGINT, SIGTERM, and SIGKILL
  signal(SIGINT, signal_callback_handler);
  signal(SIGTERM, signal_callback_handler);
  signal(SIGKILL, signal_callback_handler);

  // setup socket address structure
  memset(&amp;amp;server_addr, 0, sizeof(server_addr));
  server_addr.sun_family = AF_UNIX;
  strcpy(server_addr.sun_path, SOCKET_FILENAME);

  // bind and listen on the socket file
  bind_listen_socket(server, server_addr);

  // allocate buffer
  buflen = 1024;
  buf = new char[buflen+1];

  // loop to handle all requests
  while (1) {
    unsigned int client = accept(server, (struct sockaddr *)&amp;amp;client_addr, &amp;amp;clientlen);

    // got a request, close the socket
    close(server);
    unlink(SOCKET_FILENAME);

    // read a request
    memset(buf, 0, buflen);
    nread = recv(client, buf, buflen, 0);

    printf("\nClient says: %s\n\n", buf);

    // echo back to the client
    send(client, buf, nread, 0);

    close(client);

    sleep(2);

    // re-bind and listen on the socket
    bind_listen_socket(server, server_addr);
  }

  close(server);

  unlink(SOCKET_FILENAME);

  return 0;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;During the execution of the &lt;code&gt;while&lt;/code&gt; loop body and that 2 seconds delay I
added to demonstrate that the socket really does not take any new
connection during the execution. This is illustrated below. When trying
to connect to the socket, the client couldn’t open the socket file
during the 2-second period.&lt;/p&gt;

&lt;pre&gt;&lt;code class="language-bash"&gt;/run/app # php client.php Hi
Socket createdConnection established 
Message send successfully 
Message received 
string(2) "Hi"

/run/app # php client.php Hi
Socket created
Warning: socket_connect(): unable to connect [2]: No such file or directory in /run/app/client.php on line 14
Could not connect: [2] No such file or directory 

/run/app # php client.php Hi
Socket createdConnection established 
Message send successfully 
Message received 
string(2) "Hi"
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id="remarks"&gt;Remarks&lt;/h2&gt;

&lt;p&gt;During the handling of my job and creation of this post,
I learned that socket in UNIX domain is a very fast and effective way to achieve
interprocess communication using different programming languages&lt;/p&gt;

&lt;p&gt;The code used as examples here are available at &lt;a href="https://github.com/tommyku/cpp-php-socket-demo"&gt;tommyku/cpp-php-socket-demo&lt;/a&gt;.
As I was searching for socket programming with PHP and C++, a tutorial from &lt;a href="http://www.binarytides.com/php-socket-programming-tutorial/"&gt;BinaryTides&lt;/a&gt;
and &lt;a href="https://github.com/zappala/socket-programming-examples-c"&gt;zappala/socket-programming-examples-c&lt;/a&gt; have been very useful.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <id>tag:blog.tommyku.com,2017-11-14:/blog/the-cat-state-of-boolean-variable/</id>
    <title type="html">The "cat state" of boolean variable</title>
    <published>2017-11-14T16:00:00Z</published>
    <updated>2017-11-14T16:00:00Z</updated>
    <link rel="alternate" href="https://blog.tommyku.com/blog/the-cat-state-of-boolean-variable/"/>
    <content type="html">
&lt;p&gt;One day when I was implementing a login UI of my app in React, I
thought about a &lt;code&gt;let login = true&lt;/code&gt; flag.&lt;/p&gt;

&lt;p&gt;For a boolean variable in an object-oriented language such as
JavaScript, how many states could it possibly have? Let’s count, &lt;code&gt;true&lt;/code&gt; and &lt;code&gt;false&lt;/code&gt;,
there gives you two states.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;S ∈ { True, False }&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Nope, there is an extra state, &lt;code&gt;null&lt;/code&gt;, the variable can point to an empty
reference. Of course, in such case we aren’t talking about the
variable itself, we are talking about a reference name.
In JavaScript, such reference could also evaluate to &lt;code&gt;undefined&lt;/code&gt;!&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;S ∈ { True, False, null, undefined }&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id="why-does-it-matter"&gt;Why does it matter?&lt;/h2&gt;

&lt;p&gt;Consider the &lt;code&gt;login&lt;/code&gt; flag we mentioned, the
following table summarizes all possible values and component it should
render as a result.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;login&lt;/th&gt;
      &lt;th&gt;Component&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;true&lt;/td&gt;
      &lt;td&gt;IndexPage&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;false&lt;/td&gt;
      &lt;td&gt;LoginPage&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;null&lt;/td&gt;
      &lt;td&gt;SplashPage&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;undefined&lt;/td&gt;
      &lt;td&gt;SplashPage&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Rendering &lt;code&gt;IndexPage&lt;/code&gt; and &lt;code&gt;LoginPage&lt;/code&gt; when &lt;code&gt;login&lt;/code&gt; is true or false
looks straightforward, but &lt;code&gt;null&lt;/code&gt;? How about &lt;code&gt;undefined&lt;/code&gt;? One trick I
took is to make use of the non-determinism of the variable, to wit:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;I don’t know whether it’s true or false, so it’s in a “&lt;a href="https://en.wikipedia.org/wiki/Cat_state"&gt;cat state&lt;/a&gt;”
that’s neither true nor false.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;In other words,&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;S ∈ { True, False, Cat }&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id="should-i-use-it"&gt;Should I use it?&lt;/h2&gt;

&lt;p&gt;Don’t do that. There exists better alternative without additional
complexity, and by using the cat state you make your code harder to understand.&lt;/p&gt;

&lt;p&gt;Alternatives such as enum, like a set of constants
encapsulate exactly what this non-deterministic boolean variable is trying
to do. For example:&lt;/p&gt;

&lt;pre&gt;&lt;code class="language-javascript"&gt;// LoginState.js
export DONNO = 1;
export NOT_LOGGEDIN = 1;
export LOGGEDIN = 2;

// app.js
import LoginState from 'LoginState'

let login = LoginState.DONNO;
let renderComponent;

switch (login) {
  case LoginState.NOT_LOGGEDIN:
    renderComponent = LoginPage;
    break;
  case LoginState.LOGGEDIN:
    renderComponent = IndexPage;
    break;
  default:
    renderComponent = SplashPage;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;A quick-and-dirty implementation using non-determinism of boolean
variable wouldn’t save you much more lines of code than that.&lt;/p&gt;

&lt;p&gt;As my professor used to say:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;[insert programming language] gives you lots of ropes to hang
yourself.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;In this case, the rope is to make use of a boolean variable’s cat state and
relying on it to decide the next action. You can do that of
course, but I have shown above there is a better way to do that.&lt;/p&gt;

&lt;p&gt;When we evaluate a boolean variable, string like
&lt;code&gt;'123'&lt;/code&gt;, or integer &lt;code&gt;3&lt;/code&gt; could both be evaluated to true, while &lt;code&gt;null&lt;/code&gt;,
and &lt;code&gt;undefined&lt;/code&gt; both are evaluated to false. However, you shouldn’t rely
on it because it’s inconsistent.&lt;/p&gt;

&lt;p&gt;Consider the following if-statement:&lt;/p&gt;

&lt;pre&gt;&lt;code class="language-javascript"&gt;if (login === true) {
  // ...logged in
} else {
  // ...cat state 🐱
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Our understanding on boolean variable is that it’s value could either be
true or false, there is no cat state before OOP, and now with cat state
we are just inviting troubles because to interpret the if-statement
above, we must also consider what that boolean could be — an
integer, a string, a &lt;code&gt;null&lt;/code&gt;, or an &lt;code&gt;undefined&lt;/code&gt;?&lt;/p&gt;

&lt;p&gt;If the codebase has never relied on &lt;code&gt;null&lt;/code&gt; or &lt;code&gt;undefined&lt;/code&gt; in the first
place for it’s logic, then we could even forgo the &lt;code&gt;=== true&lt;/code&gt; part
(note &lt;code&gt;1 == true&lt;/code&gt; evaluates to true).&lt;/p&gt;

&lt;h2 id="verdict"&gt;Verdict&lt;/h2&gt;

&lt;p&gt;Using the “cat state” of a boolean variable might be a neat
trick  on project where everyone working on the code is aware
of the possible values of that variable might contain. It could be
true, false, and anything else.&lt;/p&gt;

&lt;p&gt;A safer bet, would be to use boolean strictly with its true/false
values by using &lt;code&gt;===&lt;/code&gt; operator, or use TypeScript that comes with static
type-checking.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <id>tag:blog.tommyku.com,2017-08-28:/blog/how-to-make-epubs-with-vertical-layout/</id>
    <title type="html">How to make EPUB ebooks with vertical layout?</title>
    <published>2017-08-28T16:00:00Z</published>
    <updated>2017-08-28T16:00:00Z</updated>
    <link rel="alternate" href="https://blog.tommyku.com/blog/how-to-make-epubs-with-vertical-layout/"/>
    <content type="html">
&lt;p&gt;For years I have been reading Chinese/Japanese novels on Kindle and
Google Play Book. While most Japanese books were formatted to
scroll from right to left and display texts vertically like real
books, literally none of the Chinese books I have read do the same
thing. The more I am used to reading physical books, the more this bugs
me.&lt;/p&gt;

&lt;p&gt;In this post, I demonstrating how to convert Chinese EPUB ebook from
horizontal left-to-right to vertical right-to-left layout.&lt;/p&gt;

&lt;figure&gt;
&lt;img src="./rl-demo.png" style="max-width: 15em;"&gt;
&lt;figcaption&gt;Above: horizontal left-to-right layout. Below: vertical
right-to-left layout.&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;If want to follow this step-by-step guide, you can download a sample
EPUB &lt;a href="https://github.com/tommyku/vertical-epub/raw/master/static/horizontal.epub"&gt;here&lt;/a&gt;.
Althought using advanced EPUB editors like Sigil or Calibre will make your life easier,
the ZIP archiver and text editors that came with your system
will work just as well.&lt;/p&gt;

&lt;h2 id="structure-of-an-epub-file"&gt;Structure of an EPUB file&lt;/h2&gt;

&lt;p&gt;A EPUB file is essentially a ZIP archive containing HTML files, CSS
stylesheets, images and some files with metadata for the ebook.&lt;/p&gt;

&lt;p&gt;Because EPUB is based on the widely adopted ZIP format, its content can
be easily extracted with ZIP archiver that bundles with most operating
systems. You may try to extract the content from my sample EPUB file by:&lt;/p&gt;

&lt;pre&gt;&lt;code class="language-bash"&gt;$ unzip horizontal.epub
Archive:  horizontal.epub
 extracting: mimetype
  inflating: OEBPS/toc.ncx
  inflating: OEBPS/Text/Section001.xhtml
  inflating: OEBPS/Style/style.css
  inflating: OEBPS/content.opf
  inflating: META-INF/container.xml
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The file &lt;code&gt;mimetype&lt;/code&gt;, as the name suggests, specifies the MIME type of
the ebook. &lt;code&gt;toc.ncx&lt;/code&gt; serves as a table of content.
&lt;code&gt;META-INF/container.xml&lt;/code&gt; indicates the path to the root file
&lt;code&gt;content.opf&lt;/code&gt;. &lt;code&gt;content.opf&lt;/code&gt; contains a list of all resources (like
HTML/CSS files) in the ebook and a &lt;code&gt;&amp;lt;spine&amp;gt;&lt;/code&gt; tag helps specifying page
direction.&lt;/p&gt;

&lt;p&gt;Purposes of files in &lt;code&gt;OEBPS/Text&lt;/code&gt; and &lt;code&gt;OEBPS/Style&lt;/code&gt; are self-explanatory.&lt;/p&gt;

&lt;h2 id="css-rules-for-vertical-layout"&gt;CSS rules for vertical layout&lt;/h2&gt;

&lt;p&gt;One CSS rules that decides the printing behavior of a
document is &lt;code&gt;writing-mode&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;writing-mode&lt;/code&gt; can have these values: &lt;code&gt;horizontal-tb&lt;/code&gt; (this is the initial value),
&lt;code&gt;vertical-rl&lt;/code&gt; and &lt;code&gt;vertical-lr&lt;/code&gt;. To print characters vertically from
right to left, &lt;code&gt;writing-mode&lt;/code&gt; should be set to &lt;code&gt;vertical-rl&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Now open &lt;code&gt;OEBPS/Style/styles.css&lt;/code&gt; and modify rules in the &lt;code&gt;html&lt;/code&gt;
selector to the following.&lt;/p&gt;

&lt;pre&gt;&lt;code class="language-css"&gt;/* OEBPS/Style/styles.css */
@charset "utf-8";
html {
  -epub-writing-mode: vertical-rl;
        writing-mode: vertical-rl;
 }
/* ... */
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Since we are simply dealing with HTML and CSS files, we can go ahead and
open &lt;code&gt;OEBPS/Text/Section001.xhtml&lt;/code&gt; in a browser and see the change.&lt;/p&gt;

&lt;figure&gt;
&lt;img src="./writing-mode-initial.png" style="max-width: 15em;"&gt;
&lt;figcaption&gt;Before: text printed horizontally from the left&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;figure&gt;
&lt;img src="./writing-mode-vertical-rl.png" style="max-width: 5em;"&gt;
&lt;figcaption&gt;After: text printed vertically from the right&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;If the EPUB you are editing does not have a &lt;code&gt;style.css&lt;/code&gt; file, you
must add it inside &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt; of each &lt;code&gt;.html&lt;/code&gt; and &lt;code&gt;.xhtml&lt;/code&gt; file, and add the file path to
&lt;code&gt;&amp;lt;manifest&amp;gt;&lt;/code&gt; tag in &lt;code&gt;content.opf&lt;/code&gt; yourself.&lt;/p&gt;

&lt;pre&gt;&lt;code class="language-xml"&gt;&amp;lt;!-- OEBPS/content.opf --&amp;gt;
&amp;lt;?xml version="1.0" encoding="UTF-8" ?&amp;gt;
&amp;lt;package version="2.0" xmlns="http://www.idpf.org/2007/opf" unique-identifier="PrimaryID"&amp;gt;
  ...
  &amp;lt;manifest&amp;gt;
    ...
    &amp;lt;item id="stylesheet" href="./Style/style.css"  media-type="text/css" /&amp;gt;
    ...
  &amp;lt;/manifest&amp;gt;
  ...
&amp;lt;/package&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class="language-html"&gt;&amp;lt;!-- OEBPS/Text/Section001.xhtml --&amp;gt;
&amp;lt;?xml version="1.0" encoding="UTF-8" ?&amp;gt;
&amp;lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN" "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd"&amp;gt;
&amp;lt;html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en"&amp;gt;
  &amp;lt;head&amp;gt;
    ...
    &amp;lt;link rel="stylesheet" href="../Style/style.css" type="text/css" /&amp;gt;
  &amp;lt;/head&amp;gt;
  &amp;lt;body&amp;gt;
    ...
  &amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Note that &lt;code&gt;writing-mode&lt;/code&gt; in EPUB 3 standard adopted the &lt;code&gt;-epub-&lt;/code&gt; prefix, which
borrows properties from CSS Writing Modes 2011-04-28 because when EPUB 3
was out, CSS Writing Modes was still a W3C working draft. The rule might
have changed, or will change in the future, yet &lt;code&gt;-epub-&lt;/code&gt; prefix guarantees
behavior consistent to when EPUB 3 standard was defined.&lt;/p&gt;

&lt;h2 id="scrolling-from-right-to-left"&gt;Scrolling from right to left&lt;/h2&gt;

&lt;p&gt;Most reading systems render the pages from left to right, but there’s an optional
attribute that can reverse the page direction.&lt;/p&gt;

&lt;p&gt;In &lt;code&gt;OEBPS/content.opf&lt;/code&gt; there is a tag &lt;code&gt;&amp;lt;spine&amp;gt;&lt;/code&gt;. You can set its
&lt;code&gt;page-progression-direction&lt;/code&gt; attribute to &lt;code&gt;rtl&lt;/code&gt; to make the pages scroll
from right to left.&lt;/p&gt;

&lt;pre&gt;&lt;code class="language-xml"&gt;&amp;lt;!-- OEBPS/content.opf --&amp;gt;
&amp;lt;?xml version="1.0" encoding="UTF-8" ?&amp;gt;
&amp;lt;package version="2.0" xmlns="http://www.idpf.org/2007/opf" unique-identifier="PrimaryID"&amp;gt;
  ...
  &amp;lt;spine toc="..." page-progression-direction="rtl"&amp;gt;
    ...
  &amp;lt;/spine&amp;gt;
  ...
&amp;lt;/package&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;To test this, you will have to load the EPUB file into your ebook reader
or use an ebook reader because this is a EPUB behavior, not HTML/CSS
which we saw in last section.&lt;/p&gt;

&lt;h2 id="packing-up-a-epub-file"&gt;Packing up a EPUB file&lt;/h2&gt;

&lt;p&gt;EPUB files are ZIP archives. You can use a ZIP archiver to pack up the
files into a EPUB file. In Linux you can do this.&lt;/p&gt;

&lt;pre&gt;&lt;code class="language-bash"&gt;$ zip -0 vertical.epub mimetype
$ zip -r vertical.epub META-INF OEBPS
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;First &lt;code&gt;mimetype&lt;/code&gt; is added to a ZIP archive with file extension &lt;code&gt;.epub&lt;/code&gt;,
then &lt;code&gt;META-INF&lt;/code&gt; and &lt;code&gt;OEBPS&lt;/code&gt; are added because &lt;code&gt;mimetype&lt;/code&gt; should appear
at the beginning of the EPUB file.&lt;/p&gt;

&lt;p&gt;Now you can add the EPUB file into your favorite ebook reader and enjoy
your document in a vertical, right-to-left layout.&lt;/p&gt;

&lt;p&gt;You can find the outcome of the example file &lt;a href="https://github.com/tommyku/vertical-epub/raw/master/static/vertical.epub"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id="references"&gt;References&lt;/h2&gt;

&lt;p&gt;This post is inspired by or has referenced to these pages:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href="http://www.idpf.org/epub/30/spec/epub30-ocf.html"&gt;EPUB Open Container Format (OCF) 3.0&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="http://epubzone.org/news/epub-3-and-global-language-support"&gt;EPUB 3 and Global Language Support | EPUBZone&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://blog.altova.com/learning-about-epub-structure-and-content/"&gt;Learning About EPUB: Structure and Content - Altova Blog&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.zhihu.com/question/21234737"&gt;如何制作竖排文字的 Mobi 格式电子书? - 知乎&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
  <entry>
    <id>tag:blog.tommyku.com,2017-08-01:/blog/my-recipe-book/</id>
    <title type="html">My recipe book</title>
    <published>2017-08-01T07:00:00Z</published>
    <updated>2017-08-01T07:00:00Z</updated>
    <link rel="alternate" href="https://blog.tommyku.com/blog/my-recipe-book/"/>
    <content type="html">
&lt;p&gt;During my 3-month internship in San Francisco, choices of meals was a big concern everyday.
Balancing the need for delicious foods, the walk distance to get food, and cost for food (double of
that in Hong Kong) has been a troublesome task.&lt;/p&gt;

&lt;p&gt;Solution? You’ve gotta cook.&lt;/p&gt;

&lt;p&gt;In a household of 3-4 guys which most don’t care about taste as long as
the food is edible, cooking together is a good activity to bond, relieve stresses,
save money, and most importantly getting our stomaches filled.&lt;/p&gt;

&lt;p&gt;This post is a living document over the duration of my internship (mid
June - mid Sept) in which I post (unorganized and sometimes inaccurate) recipes of
our meals. I cannot guarantee they are all delicious or healthy because most of us in
the house don’t care :p&lt;/p&gt;

&lt;figure&gt;
&lt;img src="./collage.jpg" width="100%" style="max-width: 48em;"&gt;
&lt;figcaption&gt;Impromptu meals made with leftover or random ingredients&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;!-- start of recipe --&gt;

&lt;h2 id="animal-style-sliced-potato"&gt;Animal style sliced potato&lt;/h2&gt;

&lt;p&gt;Made on &lt;time&gt;Aug 19&lt;/time&gt;, serves 2-3&lt;/p&gt;

&lt;figure&gt;
&lt;img src="./0819_1.jpg" width="100%" style="max-width: 48em;"&gt;
&lt;/figure&gt;

&lt;h3 id="ingredients"&gt;Ingredients&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Potato&lt;/li&gt;
  &lt;li&gt;Shredded Cheddar cheese&lt;/li&gt;
  &lt;li&gt;Feta cheese&lt;/li&gt;
  &lt;li&gt;Sliced cheese&lt;/li&gt;
  &lt;li&gt;Smoked paprika&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id="steps"&gt;Steps&lt;/h3&gt;

&lt;h4 id="fried-potato-slices"&gt;Fried potato slices&lt;/h4&gt;

&lt;ol&gt;
  &lt;li&gt;Slice 2-3 potatoes into 0.5cm slices&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Season with salt and pepper&lt;/p&gt;

    &lt;p&gt;&lt;img src="./0819_2.jpg" width="100%" style="max-width: 48em;"&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;Heat oil on pan, the oil is ready when it bubbles around a chopstick
head&lt;/li&gt;
  &lt;li&gt;Fry the potato slices, add smoked paprika, salt and pepper on one
side as it fries, turn when it looks slightly brown on edges but not on
surface&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Leave the finished slices on kitchen paper to absorb oil&lt;/p&gt;

    &lt;p&gt;&lt;img src="./0819_3.jpg" width="100%" style="max-width: 48em;"&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id="baking-with-cheese"&gt;Baking with cheese&lt;/h4&gt;

&lt;ol&gt;
  &lt;li&gt;Layer the fried potato slices on a baking sheet, or stack them in a
metal bowl&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Generously cover the potato slices with shredded cheddar cheese,
feta cheese and sliced cheese&lt;/p&gt;

    &lt;p&gt;&lt;img src="./0819_4.jpg" width="100%" style="max-width: 48em;"&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;Heat oven to 425℉, bake the potatoes for 15-25 minutes&lt;/li&gt;
  &lt;li&gt;Serve while hot with a fork&lt;/li&gt;
&lt;/ol&gt;

&lt;!-- end of recipe --&gt;

&lt;h2 id="fancy-egg-for-barbecue-day"&gt;Fancy egg for barbecue day&lt;/h2&gt;

&lt;p&gt;Made on &lt;time&gt;Aug 18&lt;/time&gt;, serves 3&lt;/p&gt;

&lt;figure&gt;
&lt;img src="./0818_1.jpg" width="100%" style="max-width: 48em;"&gt;
&lt;/figure&gt;

&lt;p&gt;Special thanks to Ian Hays for teaching me this dish. It’s perfect for
refreshment in barbecue comprising mainly of heavy salty meat.&lt;/p&gt;

&lt;h3 id="ingredients-1"&gt;Ingredients&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Egg&lt;/li&gt;
  &lt;li&gt;Bacon slices&lt;/li&gt;
  &lt;li&gt;Yellow mustard&lt;/li&gt;
  &lt;li&gt;Mayonnaise&lt;/li&gt;
  &lt;li&gt;Apple cider vinegar (substituted with rice vinegar in the making of
the one in picture)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id="steps-1"&gt;Steps&lt;/h3&gt;

&lt;h4 id="egg-and-bacon"&gt;Egg and bacon&lt;/h4&gt;

&lt;ol&gt;
  &lt;li&gt;Boil 4 eggs, boil for longer to ensure the yulks solidify&lt;/li&gt;
  &lt;li&gt;Peel eggs, cut into half, put the yulk into a separate bowl&lt;/li&gt;
  &lt;li&gt;Cook thick bacon slices slowly over low heat, flip often until
crispy&lt;/li&gt;
  &lt;li&gt;Use fork to sear the bacon slices into small bits, pour into the bowl
with egg yulks&lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id="the-mix"&gt;The mix&lt;/h4&gt;

&lt;ol&gt;
  &lt;li&gt;Add rice vinegar, yellow mustard and mayonnaise, start with small
portions to avoid liquidly mix&lt;/li&gt;
  &lt;li&gt;Use fork to smash the yulks and mix, add pepper generously&lt;/li&gt;
  &lt;li&gt;Taste the mix and add vinegar, mustard or mayonnaise as needed&lt;/li&gt;
  &lt;li&gt;Place the paste on where the yulks were, refrigerate for 30 minutes
before served&lt;/li&gt;
&lt;/ol&gt;

&lt;!-- end of recipe --&gt;

&lt;!-- start of recipe --&gt;

&lt;h2 id="very-luxurious-fusilli-pasta"&gt;Very luxurious fusilli pasta&lt;/h2&gt;

&lt;p&gt;Made on &lt;time&gt;Aug 2&lt;/time&gt;, serves 2-3&lt;/p&gt;

&lt;figure&gt;
&lt;img src="./0802_1.jpg" width="100%" style="max-width: 48em;"&gt;
&lt;/figure&gt;

&lt;h3 id="ingredients-2"&gt;Ingredients&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Garlic&lt;/li&gt;
  &lt;li&gt;Italian sausage&lt;/li&gt;
  &lt;li&gt;Egg&lt;/li&gt;
  &lt;li&gt;Milk&lt;/li&gt;
  &lt;li&gt;Spinach&lt;/li&gt;
  &lt;li&gt;White mushroom&lt;/li&gt;
  &lt;li&gt;Fusilli pasta&lt;/li&gt;
  &lt;li&gt;Tomato sauce&lt;/li&gt;
  &lt;li&gt;Feta cheese&lt;/li&gt;
&lt;/ul&gt;

&lt;figure&gt;
&lt;img src="./0802_ingredients.jpg" width="100%" style="max-width: 48em;"&gt;
&lt;/figure&gt;

&lt;h3 id="steps-2"&gt;Steps&lt;/h3&gt;

&lt;h4 id="fusilli-pasta"&gt;Fusilli pasta&lt;/h4&gt;

&lt;ol&gt;
  &lt;li&gt;Boil fusilli pasta in pot, soaked in salty water&lt;/li&gt;
  &lt;li&gt;Wash with cold water when cooked, set aside&lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id="sauce"&gt;Sauce&lt;/h4&gt;

&lt;ol&gt;
  &lt;li&gt;Chop garlic; slice white mushroom; beat egg, salt and pepper to
taste, add some milk&lt;/li&gt;
  &lt;li&gt;Heat pan with oil, add garlic when hot&lt;/li&gt;
  &lt;li&gt;Squeeze the meat out of Italian sausage, add when you can smell the garlic&lt;/li&gt;
  &lt;li&gt;Chop the meat into smaller chunks, better keep the heat low while you
are chopping&lt;/li&gt;
  &lt;li&gt;Add white mushroom, season with pepper&lt;/li&gt;
  &lt;li&gt;Add spinach with a bit of salt, stir fry until soft&lt;/li&gt;
&lt;/ol&gt;

&lt;figure&gt;
&lt;img src="./0802_2.jpg" width="100%" style="max-width: 48em;"&gt;
&lt;/figure&gt;

&lt;h4 id="finishing-up"&gt;Finishing up&lt;/h4&gt;

&lt;ol&gt;
  &lt;li&gt;Pour in cooked fusilli pasta, tomato sauce and egg mixture to the
sauce on pan, stir and mix&lt;/li&gt;
  &lt;li&gt;Add feta cheese and stir until all melt&lt;/li&gt;
&lt;/ol&gt;

&lt;!-- end of recipe --&gt;

&lt;!-- start of recipe --&gt;

&lt;h2 id="slightly-charred-slow-simmered-beef"&gt;Slightly charred slow simmered beef&lt;/h2&gt;

&lt;p&gt;Made on &lt;time&gt;June 25&lt;/time&gt;, serves 2, including one who usually doesn’t
eat beef&lt;/p&gt;

&lt;figure&gt;
&lt;img src="./0625_2.jpg" width="100%" style="max-width: 48em;"&gt;
&lt;/figure&gt;

&lt;figure&gt;
&lt;img src="./0625_1.jpg" width="100%" style="max-width: 48em;"&gt;
&lt;/figure&gt;

&lt;p&gt;Special thanks to Morten Koldby for teaching me this dish.&lt;/p&gt;

&lt;h3 id="steps-as-taught-by-morten"&gt;Steps (as taught by Morten)&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;Sear the meat in the pot first.&lt;/li&gt;
  &lt;li&gt;When the meat is caramelized on the edges, put in the onions and fry them lightly.&lt;/li&gt;
  &lt;li&gt;Then pour the stock over the meat &amp;amp; onion and put in the spices. Put in 2-4 bay leafs and maybe a spoonful of thyme.&lt;/li&gt;
  &lt;li&gt;Let it simmer for at least 30 minutes, maybe 45-50.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;This one is pretty messed up because all liquid boiled off while simmering. I should have added in enough beef stock.
The resultant slightly charred beef had thick sauce on the surface and may have been too salty.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;update (2017-08-15): I gave it another go, this time using up all beef
stock and simmered for 40 minutes, giving a much better result. It’d
taste even better if small chunks of carrot and potato were added.&lt;/em&gt;&lt;/p&gt;

&lt;figure&gt;
&lt;img src="./0815_beef.jpg" width="100%" style="max-width: 48em;"&gt;
&lt;/figure&gt;

&lt;!-- end of recipe --&gt;
&lt;!-- start of recipe --&gt;

&lt;h2 id="english-muffin-veggie-burger"&gt;English muffin veggie burger&lt;/h2&gt;

&lt;p&gt;Made on &lt;time&gt;June 24&lt;/time&gt;, serves 2&lt;/p&gt;

&lt;figure&gt;
&lt;img src="./0624_1.jpg" width="100%" style="max-width: 48em;"&gt;
&lt;/figure&gt;

&lt;h3 id="steps-3"&gt;Steps&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;Grill English muffin on both sides&lt;/li&gt;
  &lt;li&gt;Put cheese on top of English muffin while still hot, set aside&lt;/li&gt;
  &lt;li&gt;Grill veggie burger until it looks done&lt;/li&gt;
  &lt;li&gt;Put the burger inside the English muffin&lt;/li&gt;
&lt;/ol&gt;

&lt;!-- end of recipe --&gt;
&lt;!-- start of recipe --&gt;

&lt;h2 id="white-rice-canned-vegetable-soup-scrambled-egg-with-baby-spinach-and-cheese-and-broccoli-with-sausage-meat"&gt;White rice, canned vegetable soup, scrambled egg with baby spinach and cheese, and broccoli with sausage meat&lt;/h2&gt;

&lt;p&gt;Made on &lt;time&gt;June 22&lt;/time&gt;, serves 2&lt;/p&gt;

&lt;figure&gt;
&lt;img src="./0622_1.jpg" width="100%" style="max-width: 48em;"&gt;
&lt;figcaption&gt;Sorry this is the only picture I took&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;h3 id="steps-4"&gt;Steps&lt;/h3&gt;

&lt;h4 id="rice"&gt;Rice&lt;/h4&gt;

&lt;ol&gt;
  &lt;li&gt;Make white rice, set aside&lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id="canned-vegetable-soup"&gt;Canned vegetable soup&lt;/h4&gt;

&lt;ol&gt;
  &lt;li&gt;Heat the soup by following instructions on can&lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id="broccoli-with-sausage-meat"&gt;Broccoli with sausage meat&lt;/h4&gt;

&lt;ol&gt;
  &lt;li&gt;Cut broccoli to chunks&lt;/li&gt;
  &lt;li&gt;Heat oil on frying pan, add sausage meat when oil is hot&lt;/li&gt;
  &lt;li&gt;Chop sausage to pieces with wooden spatula then stir fry&lt;/li&gt;
  &lt;li&gt;Add broccoli when sausage meat is done, salt and pepper to taste,
stir fry until soft after water came out from broccoli&lt;/li&gt;
  &lt;li&gt;Add water and let simmer the broccoli to ensure tender texture (afterthought)*&lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id="scrambled-egg-with-baby-spinach-and-cheese"&gt;Scrambled egg with baby spinach and cheese&lt;/h4&gt;

&lt;ol&gt;
  &lt;li&gt;Beat eggs in mixing bowl and stir, salt and pepper to taste&lt;/li&gt;
  &lt;li&gt;Heat oil on frying pan, add baby spinace when oil is hot&lt;/li&gt;
  &lt;li&gt;Add salt, then pan fry until soft after water came out from baby
spinach&lt;/li&gt;
  &lt;li&gt;Pour in egg mixture onto the pan, more salt and pepper at will,
let it sit till the bottom has hardened&lt;/li&gt;
  &lt;li&gt;Pour in milk&lt;/li&gt;
  &lt;li&gt;Stir the content until it looks scrambled&lt;/li&gt;
  &lt;li&gt;Add in feta cheese, stir until molten&lt;/li&gt;
&lt;/ol&gt;

&lt;after-thought&gt;&lt;/after-thought&gt;

&lt;!-- end of recipe --&gt;
&lt;!-- start of recipe --&gt;

&lt;h2 id="fried-rice-with-celery-mixed-vegetables-and-ground-sausage"&gt;Fried rice with celery, mixed vegetables and ground sausage&lt;/h2&gt;

&lt;p&gt;Made on &lt;time&gt;June 20&lt;/time&gt;, serves 2&lt;/p&gt;

&lt;figure&gt;
&lt;img src="./0620_1.jpg" width="100%" style="max-width: 48em;"&gt;
&lt;/figure&gt;

&lt;h3 id="steps-5"&gt;Steps&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;Make white rice, set aside&lt;/li&gt;
  &lt;li&gt;Take out frozen mixed vegetables, set aside to defroze&lt;/li&gt;
  &lt;li&gt;Clean and cut celery to chunks&lt;/li&gt;
  &lt;li&gt;Soak in vinegar and/or sake with salt and pepper to
taste for 10min (afterthought)*&lt;/li&gt;
  &lt;li&gt;Heat oil on frying pan, add sausage meat, smush to small chunks&lt;/li&gt;
  &lt;li&gt;Add celery and mixed vegetables to pan, add soy sauce and salt
then stir fry until tender&lt;/li&gt;
  &lt;li&gt;Add a bit of water and more soy sauce and simmer for
softer celery (afterthought)*&lt;/li&gt;
  &lt;li&gt;Add rice, add more oil to prevent charring, salt and pepper to taste, stir fry
to your heart’s content&lt;/li&gt;
&lt;/ol&gt;

&lt;after-thought&gt;&lt;/after-thought&gt;

&lt;!-- end of recipe --&gt;

&lt;script type="text/javascript"&gt;
class AfterThought extends HTMLElement {
  connectedCallback() {
    this.innerHTML = "&lt;small&gt;* afterthoughts are what I thought would make the dish better after having made it&lt;/small&gt;";
  }
}
customElements.define('after-thought', AfterThought);
&lt;/script&gt;

</content>
  </entry>
  <entry>
    <id>tag:blog.tommyku.com,2017-06-09:/blog/appcache-revisited/</id>
    <title type="html">AppCache revisited</title>
    <published>2017-06-09T16:00:00Z</published>
    <updated>2017-06-09T16:00:00Z</updated>
    <link rel="alternate" href="https://blog.tommyku.com/blog/appcache-revisited/"/>
    <content type="html">
&lt;p&gt;Two years ago, I wrote about the use of &lt;em&gt;Application Cache
(AppCache)&lt;/em&gt; in the post “&lt;a href="https://blog.tommyku.com/blog/adding-html5-application-cache-to-speed-up-your-web-app-in-5-minutes/"&gt;Adding HTML5 application cache to speed up your web app in 5 minutes&lt;/a&gt;”.&lt;/p&gt;

&lt;p&gt;The AppCache feature &lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Using_the_application_cache"&gt;is deprecated as a web standard&lt;/a&gt;, so newer
version of browsers may not support it.&lt;/p&gt;

&lt;p&gt;In comparison to its alternative &lt;em&gt;Service Worker&lt;/em&gt;, AppCache is more
difficult to use because the web server has to serve the manifest files
in &lt;code&gt;text/cache-manifest&lt;/code&gt; type while service worker is an ordinary JavaScript file.
No tinkering with the web server required except for
the HTTPS. Service worker has a shortcoming of unable to
run on browser with JavaScript disabled while AppCache doesn’t need
JavaScript to run.&lt;/p&gt;

&lt;p&gt;The title of this post is “&lt;strong&gt;AppCache revisited&lt;/strong&gt;”, but I am not going
to implement it again. Instead, I am migrating an old app that has
been sitting around since 2015 from AppCache to Service Worker.&lt;/p&gt;

&lt;h2 id="removing-appcache-from-an-app"&gt;Removing AppCache from an app&lt;/h2&gt;

&lt;h3 id="removing-manifest-mime-type"&gt;Removing manifest MIME type&lt;/h3&gt;

&lt;p&gt;The web server was set up to serve &lt;code&gt;*.manifest&lt;/code&gt; files with MIME type
&lt;code&gt;text/cache-manifest&lt;/code&gt;. It is no longer needed as we are removing AppCache.&lt;/p&gt;

&lt;pre&gt;&lt;code class="language-apache"&gt;# .htaccess
# ...
# Remove this line from .htaccess file
AddType text/cache-manifest .manifest
# ...
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id="removing-references-to-manifest-files-from-source"&gt;Removing references to manifest files from source&lt;/h3&gt;

&lt;p&gt;Remove the &lt;code&gt;manifest&lt;/code&gt; attribute from &lt;code&gt;&amp;lt;html&amp;gt;&lt;/code&gt; tag.&lt;/p&gt;

&lt;pre&gt;&lt;code class="language-html"&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html manifest="/manifest/app.cache.manifest"&amp;gt;
&amp;lt;!-- ... --&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The &lt;code&gt;app.cache.manifest&lt;/code&gt; file should also be removed from the project,
note that the file looks like this at the moment.&lt;/p&gt;

&lt;p&gt;(yes, this is the same app from that old AppCache post)&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;CACHE MANIFEST

CACHE:
/js/app.js
/js/angular/angular.min.js
/js/angular-resource/angular-resource.min.js
/js/angular-sanitize/angular-sanitize.min.js
/css/base.css
/css/animate.css

NETWORK:
*
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Later when we migrate to service worker, the list of files to be cached
is useful because like AppCache, you can specifiy exactly what to cache
in service worker.&lt;/p&gt;

&lt;p&gt;Now the app is free of the old deprecated AppCache. To achieve the same
caching effect, we will have to use add service worker to the app.&lt;/p&gt;

&lt;h2 id="adding-service-worker-to-an-app"&gt;Adding service worker to an app&lt;/h2&gt;

&lt;h3 id="requirements-of-service-worker"&gt;Requirements of service worker&lt;/h3&gt;

&lt;p&gt;HTTPS is required to run service worker because service worker can serve
modified responses to network request, increasing the risk of man in the
middle attack. According to an &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/Service_Worker_API"&gt;MDN article&lt;/a&gt;, Firefox disables service worker API while in private
browsing mode.&lt;/p&gt;

&lt;p&gt;To enable HTTPS on your server, &lt;a href="https://letsencrypt.org/"&gt;Let’s Encrypt&lt;/a&gt;
is a good source of free certificate. If your app is
hosted on &lt;a href="https://pages.github.com/"&gt;GitHub Pages&lt;/a&gt;, it is already
being served over HTTPS (and it’s free!). &lt;a href="https://www.cloudflare.com/"&gt;Cloudflare&lt;/a&gt;
also provides HTTPS at free-tier if you are being lazy. (though the connection between
Cloudflare and your server may not be private, see &lt;a href="https://support.cloudflare.com/hc/en-us/articles/200170416-What-do-the-SSL-options-Off-Flexible-SSL-Full-SSL-Full-SSL-Strict-mean-"&gt;this article&lt;/a&gt; for
details).&lt;/p&gt;

&lt;h3 id="the-service-workerjs"&gt;The service-worker.js&lt;/h3&gt;

&lt;p&gt;If you build your app with build tools such as &lt;code&gt;webpack&lt;/code&gt; or &lt;code&gt;gulp&lt;/code&gt;,
&lt;a href="https://workboxjs.org/#get-started"&gt;Workbox&lt;/a&gt; is a great tool for
integrating service worker into your app. The app I am maintaining
wasn’t built with any build tool but plain CSS and JavaScript. Workbox provides
options to manually select what kinds of file to cache.&lt;/p&gt;

&lt;p&gt;To show you how to add service worker to a project, I decided to write
one up manually.&lt;/p&gt;

&lt;pre&gt;&lt;code class="language-javascript"&gt;// service-worker.js
var cacheName, filesToCache;

cacheName = 'link-201706101730';

filesToCache = [
  '/',
  'index.html'
  'js/app.js',
  'js/angular/angular.min.js',
  'js/angular-resource/angular-resource.min.js',
  'js/angular-sanitize/angular-sanitize.min.js',
  'css/base.css',
  'css/animate.css',
];
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;At the top of &lt;code&gt;service-worker.js&lt;/code&gt;, the &lt;code&gt;cacheName&lt;/code&gt; and &lt;code&gt;filesToCache&lt;/code&gt;
are specified. Caching each asset with individual cache name is
possible and preferred. To keep the example simple, we use a single
cache name for all files here.&lt;/p&gt;

&lt;pre&gt;&lt;code class="language-javascript"&gt;// service-worker.js
var cacheName, filesToCache;

cacheName = 'link-201706101730';

filesToCache = [
  '/',
  'index.html'
  'js/app.js',
  'js/angular/angular.min.js',
  'js/angular-resource/angular-resource.min.js',
  'js/angular-sanitize/angular-sanitize.min.js',
  'css/base.css',
  'css/animate.css',
];

self.addEventListener('install', function(e) {
  // [ServiceWorker] Install
  return e.waitUntil(caches.open(cacheName).then(function(cache) {
    console.log('[ServiceWorker] Caching app shell');
    return cache.addAll(filesToCache);
  }));
});

self.addEventListener('fetch', function(e) {
  console.log('[ServiceWorker] Fetch', e.request.url);
  return e.respondWith(
    fetch(e.request).catch(function() {
      return caches.match(e.request);
    })
  );
});

self.addEventListener('activate', function(e) {
  console.log('[ServiceWorker] Activate');
  return e.waitUntil(caches.keys().then(function(keyList) {
    return Promise.all(keyList.map(function(key) {
      if (key !== cacheName) {
        console.log('[ServiceWorker] Removing old cache', key);
        return caches["delete"](key);
      }
    }));
  }));
});
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This service worker set up will install and activate itself to cache new
assets. The &lt;code&gt;fetch&lt;/code&gt; event uses network first instead of cache first
approach when dealing with asset request, meaning that it always try to
fetch through the network before falling back to using caches.&lt;/p&gt;

&lt;p&gt;The code in this service worker example was heavily influenced by
&lt;a href="https://developers.google.com/web/fundamentals/architecture/app-shell"&gt;this article&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id="installing-and-updating-service-worker"&gt;Installing and updating service worker&lt;/h3&gt;

&lt;p&gt;Service worker doesn’t just work on its own, your app has to
explicitly register the service worker for it to work.&lt;/p&gt;

&lt;p&gt;To achieve this, add the following code to the end of your app’s
JavaScript file.&lt;/p&gt;

&lt;pre&gt;&lt;code class="language-javascript"&gt;// app.js
// ...

if(typeof navigator['serviceWorker'] != 'undefined') {
  window.addEventListener('load', ()=&amp;gt; {
    navigator.serviceWorker
      .register('/service-worker.js')
      .then(()=&amp;gt; {
        console.log('Service Worker Registered')
      });
  });
};
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Lastly, deploy the app as usual. The app should load fast and work
offline like how it was with AppCache. Of course, background
sync and push notifications are also available thanks to service worker,
but they are out of the scope of this post.&lt;/p&gt;

&lt;h2 id="closing-thoughts"&gt;Closing thoughts&lt;/h2&gt;

&lt;p&gt;One important thing to note is that despite deprecated, AppCache is
still supported by most of the major browsers (as of June 2017), while
service worker is either under development or under consideration on
Edge and Safari. The momentum of service worker is strong, with notable
sites such as Aliexpress, Flipboard, Financial Timesm and &lt;a href="https://pwa.rocks/"&gt;more&lt;/a&gt; already
using service worker to provide offline usability.&lt;/p&gt;

&lt;figure&gt;
&lt;img src="./caniuse-appcache.png"&gt;
&lt;figcaption&gt;Browser support for AppCache (source: &lt;a href="https://caniuse.com/#feat=offline-apps"&gt;caniuse.com&lt;/a&gt;)&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;figure&gt;
&lt;img src="./caniuse-sw.png"&gt;
&lt;figcaption&gt;Browser support for service worker (source: &lt;a href="https://caniuse.com/#feat=serviceworkers"&gt;caniuse.com&lt;/a&gt;)&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;Of course, service worker isn’s just about caching, it enables for
app-link features such as push notification, background sync and install
to homescreen that will continue to fill the gap between native apps and
web apps without the need for software like Cordova and
PhoneGap.&lt;/p&gt;

&lt;p&gt;Looking back, not only AppCache, many browser APIs have been developed
to empower the web. I am excited to see as the web continues to evolve,
what will emerge to bridge the gap between native apps and web
apps (Firefox OS was a bummer), or even better, how web can surpass
native app in portability, availability and user experience.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <id>tag:blog.tommyku.com,2017-06-08:/blog/from-nexus-5x-to-moto-z-play/</id>
    <title type="html">From Nexus 5X to Moto Z Play</title>
    <published>2017-06-08T16:00:00Z</published>
    <updated>2017-06-08T16:00:00Z</updated>
    <link rel="alternate" href="https://blog.tommyku.com/blog/from-nexus-5x-to-moto-z-play/"/>
    <content type="html">
&lt;p&gt;Despite inflamous bootloop issue, Nexus 5X is still the best phone I
have ever used. I had to replace it because bootloop happened the second
time last month. My choice of replacement was Moto Play Z, a
well-built phone balancing battery life, performance and screen quality.&lt;/p&gt;

&lt;p&gt;In this post I am going to describe my experience with Nexus 5X and
compare it with Moto Play Z.&lt;/p&gt;

&lt;h2 id="farewell-to-nexus-5x"&gt;Farewell to Nexus 5X&lt;/h2&gt;

&lt;p&gt;I purchased a Nexus 5X from Google Store Hong Kong on Novemeber 2015.
At that time, my 2-year old Nexus 4 has been suffering from low battery
life and excessive heat during casual web browsing. Google Store shipment’s
prompt shipment amazed me as I received the phone with a phone case and
USB cable the next day I pressed the buy button.&lt;/p&gt;

&lt;p&gt;Fast forward to April 2016, I had been using the phone for about half a
year. The Nexus 5X had never failed me with its excellent camera,
bright and sharp screen (423 ppi). The battery life was fine, I could
use it for a whole day during travel before recharging. Best of all,
it supports all 4G LTE bands everywhere I go (China, Taiwan, Japan, United
States, and Hong Kong).&lt;/p&gt;

&lt;p&gt;The experience was stellar until it breaks all of a sudden on August
2016, it rebooted into bootloop. Google store wasn’t helpful at the time
and they advised me to talk to LG. Of course LG fixed it, by replacing
the motherboard. Then on May 2017, bootloop happened again and it
has long passed the warranty period.&lt;/p&gt;

&lt;p&gt;Google Store was willing to replace the unit this time. My friend got a
replacement unit just one month before mine breaking down. But Google
ran out of replacement unit so I got a refund instead. That’s better than
getting a replacement that nobody knows when it’s gonna break down
again.&lt;/p&gt;

&lt;figure&gt;
&lt;img src="./nexus5x.jpg" width="500px"&gt;
&lt;figcaption&gt;Shipping the unit back to Google in its original box, with all included accessories&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;h2 id="hello-to-moto-play-z"&gt;Hello to Moto Play Z&lt;/h2&gt;

&lt;p&gt;After returning my Nexus 5X to Google, I had to decide which phone to
use next. I couldn’t get a new Nexus 5X or Nexus 6P because Google Store
no longer sell them and I have had enough of bootloop. Pixel hasn’t been
officially available in Hong Kong either.&lt;/p&gt;

&lt;p&gt;In an attempt to look for a phone with similar qualities as Nexus 5X,
and most importantly similar 4G LTE network support. Not many phones in
Hong Kong support bands at the US. Most of them were sold to accomondate
people in Hong Kong and China. I needed a phone that supports
band 2, 4 mainly used in the USA; band 1, 3, 7 in Hong Kong; and band 38, 40, 41 in China.&lt;/p&gt;

&lt;p&gt;Samsung phones are all out of the question except for the flagship model
Samsung Galaxy S8, a bit too pricey for me. LG V20 does support
everything I need, with a big 5.7 inches screen, but it’s LG and I’ve
had enought of that. That brought me to Motorola, a usually overlooked
brand. At the time the specification stated that both Moto Z and Moto Z
Play supported all the bands I needed and each has its individual
merits.&lt;/p&gt;

&lt;p&gt;I ended up getting Moto Z Play. It was a difficult choice until I
learned that Moto Z comes with less battery capacity and no 3.5mm
headphone jack.&lt;/p&gt;

&lt;p&gt;Moto Z Play comes with a wood case that adds more grip to the
rather thin phone (7mm thick). The case attaches to the back of the
phone with 4 magnetic points, Moto Mod attachments could be attached the
same way.&lt;/p&gt;

&lt;p&gt;The screen size of Moto Z Play is 5.5 inches, slightly bigger than the
5.2 inches screen of Nexus 5X. After a couple weeks of usage I
have grown used to the bigger screen and phone size. In comparison to
Nexus 5X, Moto Z Play has comparable 403 PPI at full HD. On enhanced
color mode, the colors on screen look more vibrant and attractive than
Nexus 5X.&lt;/p&gt;

&lt;p&gt;For battery life, I could use the phone on Wifi and 4G for two days
without charging and still have 30% battery left. This is a big improvement
over the Nexus 5X, which requires charging every day, on both Wifi and 4G.
Quick Charge 3.0 wouldn’t work on both Nexus 5X and Moto Play Z as they
have their own variant of quick charging - the so called ‘quick charge’
on Nexus 5X and ‘turbocharge’ on Moto Z Play. I have never gotten the
Moto Z Play turbocharge to work on any other chargers and cables except
for the one that came in the box.&lt;/p&gt;

&lt;p&gt;The Moto Z Play comes with a very stock-like ROM, only with an
additional File Manager, Moto app and a convenient Device Help app. They
are all helpful for managing the phone and tweaking the settings, and
even testing each individual hardware component. So I’d say Moto Z Play comes
with  no bloatware and the experience is very
stock Android-like. No lag on the phone during daily use
despite I couldn’t say the same for people who run lots of background
apps and demanding games.&lt;/p&gt;

&lt;p&gt;I would say one of Moto Z Play’s selling points (despite not emphasized) is
gesture support. Chop twice to turn on the flash light, or twist twice
to open the camera app, and some more gestures worked as intended every
single time. Generally there was no mis-firing except for approaching
to turn on display during sleep can be annoying. Gestures can be enabled
or disabled individually from the built-in Moto app.&lt;/p&gt;

&lt;p&gt;The only shortcoming of Moto Z Play is its camera. Internet reviews
said it’s fine but to me it’s unacceptable when compared to Nexus 5X.
Nexus 5X’s camera app works like a charm all the time, capturing both
the details and color contrast without extra tinkering while that of
Moto Z Play always tends to sacrifice one to achieve another. Sometimes
the color was right but it looks blurry, other times it gets all the
details but the white balance was focusing at the wrong spot, resulting
in a photo too dark.&lt;/p&gt;

&lt;p&gt;The photos below were taken with Moto Z Play and Nexus 5X respectively.
I did tamper with it using GIMP to blur out people’s faces and resized
them to 25% of their original sizes. The point to be made is, if it
looks super bad after resizing, it looks at least quite bad before resizing.
Nexus 5X captures all the details both from afar and near even in
low light. Moto Z Play failed to capture much of the
details, say the text and the branches and leaves on the trees. I know
this is not an apple-to-apple comparison, but as far as I can tell from
using them, Nexus 5X seems to have a superior camera (or image
processing software, or both).&lt;/p&gt;

&lt;figure&gt;
&lt;img src="./moto_camera.jpg"&gt;
&lt;figcaption&gt;Photo taken outdoor with Moto Z Play&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;figure&gt;
&lt;img src="./nexus_camera.jpg"&gt;
&lt;figcaption&gt;Photo taken outdoor with Nexus 5X at night&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;I am too poor to care about Moto Mods. The 16-pin connector at the back of the
phone is both visually distracting and useless to me.&lt;/p&gt;

&lt;h2 id="closing-words"&gt;Closing words&lt;/h2&gt;

&lt;p&gt;Overall I am happy to have Moto Z Play as a replacement for Nexus 5X, it
is more performant with longer battery life and better screen. The
camera is a big disappointment considering Motorola has got everything
just right on the phone. Should Moto Z Play had a camera as good as that
of Nexus 5X, it’d have been a perfect phone. Still, if you are looking
for an alternative or replacement to Nexus 5X, I’d say Moto Z Play is
the closest alternative at the price range of HKD$3,000 ~ HKD$4,000 price
range (I got mine at HKD$2,870).&lt;/p&gt;
</content>
  </entry>
  <entry>
    <id>tag:blog.tommyku.com,2017-05-16:/blog/the-hidden-cost-of-self-hosting/</id>
    <title type="html">The hidden cost of self-hosting</title>
    <published>2017-05-16T16:00:00Z</published>
    <updated>2017-05-16T16:00:00Z</updated>
    <link rel="alternate" href="https://blog.tommyku.com/blog/the-hidden-cost-of-self-hosting/"/>
    <content type="html">
&lt;p&gt;One day I stumbled upon a list on GitHub
&lt;a href="https://github.com/Kickball/awesome-selfhosted"&gt;Kickball/awesome-selfhosted&lt;/a&gt;
listing open-source services and applications that can be hosted locally
or on my own servers. The list covers much more than you’d expect, you
can find alternatives to most close-sourced services you use daily on
the list. For example, Nextcloud does mostly what G Suite does; use GitLab to
replace GitHub; use Mastodon, the free (as in freedom) clone of Twitter…&lt;/p&gt;

&lt;p&gt;Nowadays high-quality (and some not-so-high-quality) online services are
available for free to the public in every steps of life. All it takes is
usually just an email address and a password, maybe phone verification
too, then one can enjoy limitless photo backup on Google Photo,
reach millions of people on Twitter, etc. Sounds awesome? No, there
comes the hidden cost as you hand over your data and willingly subject
yourself to their &lt;a href="https://www.theguardian.com/technology/2014/oct/02/facebook-sorry-secret-psychological-experiment-users"&gt;experiments&lt;/a&gt; and &lt;a href="https://privacy.google.com/intl/en/how-ads-work.html"&gt;selection of ads&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Of course, I don’t mean stop using all those awesome free services and
start self-hosting everything yourself. That’ll be impractical and
prohibitively expensive in both storage and actually running the
services. The good thing is, there are always self-hosted alternatives
to opt for.&lt;/p&gt;

&lt;p&gt;As it turned out, it wasn’t a easy task to self-host anything, not at
all.&lt;/p&gt;

&lt;h2 id="hosting-my-own-note-taking-service"&gt;Hosting my own note-taking service&lt;/h2&gt;

&lt;p&gt;The time was the beginning of the semester, when I had to decide which
note-taking application to use for the semester. I used to take note
with pen and paper. They are ineffective and too heavy to carry around
near the end of the semester.&lt;/p&gt;

&lt;p&gt;I needed something that syncs and backups automatically, works on both
laptop and mobile, and should look nice enough. Originally it wasn’t about
self-hosting. I took notes on Vim and sync them to GitLab. Shortly
after, I trashed this practice because my notes are always out of sync
and I couldn’t read them on the phone.&lt;/p&gt;

&lt;p&gt;Then I found Standard Notes.&lt;/p&gt;

&lt;figure&gt;
&lt;img src="./hero-banner.png"&gt;
&lt;figcaption&gt;Standard Notes, a self-hosted note app (image: &lt;a href="https://standardnotes.org/"&gt;Standard Notes&lt;/a&gt;)&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;Standard Notes is just one app thats connects to a &lt;a href="https://standardfile.org/"&gt;Standard File&lt;/a&gt;
server. Think of it as a personal database that can be used across all
apps in an encrypted, standardized format. With Standard File server, you
own your own data. Nobody can tamper with your data. Nobody can look into
the data and tell what kind of ads or site you should visit. Standard File server
should remain private and encrypted, end-to-end. As such, I was sold.&lt;/p&gt;

&lt;p&gt;The time is 2017, it is easy to gather the necessities to self-host
something. Domain name? GoDaddy. SSL? Let’s Encrypt or Cloudflare.
Hosting? Digital Ocean/Linode. With the proper knowledge and choice of
service provider it shouldn’t break your bank trying to self-host
something.&lt;/p&gt;

&lt;p&gt;However there were a few issues. Setting up a Standard File server could
be a &lt;a href="https://github.com/standardfile/ruby-server/wiki/Deploying-a-private-Standard-File-server-with-Amazon-EC2-and-Nginx"&gt;lengthy process&lt;/a&gt; involving a bunch of command crunchings. To facilitate the process
one could use Docker, if there was a Dockerfile with documentation.&lt;/p&gt;

&lt;p&gt;Turned out there was no proper &lt;code&gt;Dockerfile&lt;/code&gt; merged to the repo
&lt;a href="https://github.com/standardfile/ruby-server"&gt;standardfile/ruby-server&lt;/a&gt;
and no documentation regardling deployment using Docker whatsoever. It
took me two nights to modify a &lt;code&gt;Dockerfile&lt;/code&gt; from a fork, and a few more nights to finish a
&lt;a href="https://github.com/standardfile/ruby-server/pull/44"&gt;&lt;em&gt;proper&lt;/em&gt; one&lt;/a&gt; and get it merged.&lt;/p&gt;

&lt;figure&gt;
&lt;img src="./standard.png"&gt;
&lt;figcaption&gt;The exact screen you see when you navigate to your Standard File server domain&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;Cool, now can I finally deploy it and don’t have to worry about it for the
decades to come? Not really.&lt;/p&gt;

&lt;p&gt;When you own a server out there you’d have to worry about what any
sysadmin would worry about. You should &lt;a href="https://about.gitlab.com/2017/02/01/gitlab-dot-com-database-incident/"&gt;backup regularily&lt;/a&gt;, prevent &lt;a href="https://www.fail2ban.org/wiki/index.php/Main_Page"&gt;attacks&lt;/a&gt;, keep the software
up to date, &lt;a href="https://uptimerobot.com/"&gt;monitor the uptime&lt;/a&gt; and remember to pay for the domain and hosting. This may seem to be a no-brainer for seasoned admins but as someone new to the field,
it felt frustrating to configure multiple additional software just to get one
self-hosted online service running. A couple hours should be enough to configure everything and
you can eventually begin to enjoy your own self-hosted service that probably
won’t work better then its commercial counterpart, but it’s free, and
you own the data.&lt;/p&gt;

&lt;p&gt;Very soon you may think it’s too crappy and want to modify the
source code yourself. That might take a couple more days away from your life
albeit in the open-source community perspective it’s the preferable way
to do things.&lt;/p&gt;

&lt;h2 id="so-should-i-start-self-hosting"&gt;So, should I start self-hosting?&lt;/h2&gt;

&lt;p&gt;Nobody has to self-host something if free commercial
services should suffice. But one big feature of those services is the safety
of your data, even &lt;a href="https://mobile.nytimes.com/2015/06/29/technology/when-a-company-goes-up-for-sale-in-many-cases-so-does-your-personal-data.html"&gt;if the company hosting it is sold&lt;/a&gt;. Government, good or evil,
could forcefully access your data. If you believe your data worths more
protection then their own business interest, &lt;a href="https://govtrequests.facebook.com/"&gt;think again&lt;/a&gt;, &lt;a href="https://www.google.com/transparencyreport/userdatarequests/legalprocess/"&gt;think thrice&lt;/a&gt;
if you have to. You may not have something to hide, most people don’t.
That doesn’t mean in essence someone can legitimately look at your
data without asking.&lt;/p&gt;

&lt;p&gt;Self-hosting gives you the option to lock something up and throw away
the key when necessary. While it is possible to reset password on most
online services, you can keep the password that also serves as the
encryption key of your data only in your head. If you decide to hit
yourself in the head to forget the password, nothing better than brute-force
guessing can recover the data.&lt;/p&gt;

&lt;p&gt;You pay your hosting company to keep the server running every month. For
anything that you’d rather take to your grave, just leave it. Take
Digital Ocean as an example, your data &lt;a href="https://www.digitalocean.com/help/pricing-and-billing/general/"&gt;will be purged&lt;/a&gt; if you don’t pay the bill for a long enough time.&lt;/p&gt;

&lt;figure&gt;
&lt;img src="./after-i-died.jpg"&gt;
&lt;figcaption&gt;Self-host things that you want to keep secret forever&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;Self-hosting is difficult to set up and troublesome to maintain. Most of the
the open-source self-hosting solutions are less user-friendly and less
functional then their commercial counterparts. Domain name renewal and
hosting may cost a lot in long run. In exchange, you can own your data
and peace in mind knowing nobody can sell your data for profit or
access it without your authorization (unless they hack, but who cares
about your data).&lt;/p&gt;
</content>
  </entry>
  <entry>
    <id>tag:blog.tommyku.com,2017-02-20:/blog/do-i-need-a-new-laptop/</id>
    <title type="html">Do I need a new laptop</title>
    <published>2017-02-20T16:00:00Z</published>
    <updated>2017-02-20T16:00:00Z</updated>
    <link rel="alternate" href="https://blog.tommyku.com/blog/do-i-need-a-new-laptop/"/>
    <content type="html">
&lt;p&gt;Last year I &lt;a href="../looking-for-a-laptop"&gt;wrote about&lt;/a&gt; my
looking for a new laptop to replace my then 4-year old now 5 &lt;a href="http://shop.lenovo.com/us/en/laptops/thinkpad/x-series/x230/"&gt;Thinkpad X230&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Although I didn’t get a new one, I didn’t keep the ‘old one’ either. Instead of
buying the latest 12.5 inch offering in the X series (&lt;a href="http://shop.lenovo.com/us/en/laptops/thinkpad/x-series/x260/"&gt;Thinkpad X260&lt;/a&gt;),
I have upgraded my Thinkpad X230 parts to keep up with the laptop spec
nowadays.&lt;/p&gt;

&lt;p&gt;Some might have noticed that before &lt;a href="../working-in-taipei-for-a-month"&gt;my trip to Taipei&lt;/a&gt;
last August, I upgraded the RAM from 4GB to 8GB dual channel
DDR3 1600MHz. That saved my laptop from freezing while compiling Android
apps. This time, I upgraded the 512GB 7200rpm hard disk to a 275GB
Crucial MX300 solid state drive, bringing a sharp performance boost.&lt;/p&gt;

&lt;figure&gt;
&lt;img src="./ssdvshdd.png"&gt;
&lt;figcaption&gt;SSD performance (left) vs Hard disk performance (right) using
&lt;a href="http://crystalmark.info/software/CrystalDiskMark/index-e.html"&gt;CrystalDiskMark&lt;/a&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;The two upgrades costed me $860HKD ($220 for RAM and $640 for SSD)
— not cheap, but looking at its potential substitute the Thinkpad
X260, which starts at $8108HKD for comparable spec, this is quite a good
deal. Although X260 does use RAM with higher clock rate, a &lt;a href="http://cpuboss.com/cpus/Intel-Core-i5-6200U-vs-Intel-Core-i5-3210M"&gt;slightly&lt;/a&gt;
&lt;a href="http://cpu.userbenchmark.com/Compare/Intel-Core-i5-6200U-vs-Intel-Core-i5-3210M/m36796vs2719"&gt;faster&lt;/a&gt; CPU,
and an option to upgrade to a full HD IPS panel, X230 offers what X260
doesn’t — upgradability.&lt;/p&gt;

&lt;p&gt;X230’s RAM slots back cover and a hard disk bay cover can be
removed with just 5 screws. On X260, the whole back
plate &lt;a href="http://www.laptopmain.com/how-to-disassemble-lenovo-thinkpad-x260-to-upgrade-ssd-and-ram/"&gt;has to be removed&lt;/a&gt;
before one could access the only RAM slot and the hard disk. X260
didn’t allow for simple upgrade and it was nobody’s fault. To keep X260’s
compact form factor sacrifices had to be made and I was really surprised
that at least they are not soldering everything on like the 2016 X1 carbon.&lt;/p&gt;

&lt;p&gt;I am a die-hard fan of the Thinkpad X-series despite many prefer Macbook
more. The upgradability of my X230 enables it to extend its usable life
beyond 5 years which is hardly achievable without desoldering something
on a Macbook. Despite battery life is my next concern, I would happily
set sail on my trustworthy better than ever 5-year old laptop for the time being.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <id>tag:blog.tommyku.com,2017-01-15:/special/leaving-eventxtra-with-26-lessons-learned/</id>
    <title type="html">Leaving EventXtra with 26 lessons learned</title>
    <published>2017-01-15T16:00:00Z</published>
    <updated>2017-01-15T16:00:00Z</updated>
    <link rel="alternate" href="https://blog.tommyku.com/special/leaving-eventxtra-with-26-lessons-learned/"/>
    <content type="html">
&lt;p&gt;On January 2017 I am leaving EventXtra, a Hong Kong-based event
management solution which I have been working for since 2016
(discounting Jan-Apr 2016 when I were on student exchange).&lt;/p&gt;

&lt;p&gt;This place is full of people having unique characters.
I had fun working with every single one of them. From whom I learned a
lot through observation, collaboration and even dispute.&lt;/p&gt;

&lt;p&gt;To those who are already &lt;em&gt;tl;dr&lt;/em&gt; at this point, the following list of lessons learned,
in no particular order, serves as the table of content:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;a href="#trust"&gt;Trust&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="#focus"&gt;Focus&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="#vision"&gt;Vision&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="#value"&gt;Value&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="#communication"&gt;Communication&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="#observe"&gt;Observe&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="#self_improvement"&gt;Self-improvement&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="#respect"&gt;Respect&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="#listen"&gt;Listen&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="#acknowledgement"&gt;Acknowledgement&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="#process"&gt;Process&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="#obsession"&gt;Obsession&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="#fun"&gt;Fun&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="#take_a_stand"&gt;Take a stand&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="#hardware"&gt;Hardware&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="#expectation"&gt;Expectation&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="#ask"&gt;Ask&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="#compromise"&gt;Compromise&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="#responsibility"&gt;Responsibility&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="#social_network"&gt;Social network&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="#information"&gt;Information&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="#family"&gt;Family&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="#sharing"&gt;Sharing&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="#confidence"&gt;Confidence&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="#take_small_steps"&gt;Take small steps&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="#automation"&gt;Automation&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id="trust"&gt;Trust&lt;/h2&gt;
&lt;p&gt;&lt;a id="#trust"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Trust and Rome both weren’t built in a day, it takes time. Having mutal
trust between myself and my coworkers enables everybody to know what to
expect from each other, thus invariably make collaborations more
pleasant.&lt;/p&gt;

&lt;p&gt;When I meet a new colleague or enter a new environment, establishing trust with my
fellow coworkers is automatically my first priority. I am always in need
of knowing what a colleague of capable or incapable of such that I can adjust my working
style with that person.&lt;/p&gt;

&lt;p&gt;For example, I might give slightly more hints or send some useful links when
I know the person responsible for a task is new or uncomfortable with
that task.&lt;/p&gt;

&lt;p&gt;From my experience the best way to build trust is to let go and assist
only when prompted for so that it becomes easy to judge how well that person
can manage the task single-handedly. You may even feel surprised of the
outcome that’s beyond your expectation.&lt;/p&gt;

&lt;h2 id="focus"&gt;Focus&lt;/h2&gt;
&lt;p&gt;&lt;a id="#focus"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://en.wikipedia.org/wiki/Pareto_principle"&gt;The Pareto principle&lt;/a&gt;,
also famously known as the &lt;em&gt;80/20 rule&lt;/em&gt; which means that 80%
of the effects come from 20% of the causes.&lt;/p&gt;

&lt;p&gt;I picked this up from the book &lt;a href="https://www.amazon.com/80-20-Principle-Secret-Achieving/dp/0385491743"&gt;The 80/20 Principle: The Secret to Achieving More with Less&lt;/a&gt;
borrowed from a coworker on a boring plane trip to Taipei. After which I
began considering what are the 20% and what are the 80% in my life and
my work.&lt;/p&gt;

&lt;p&gt;The point is to identify where 80% of the outcome come from, and keep
practicing the action that leads to that outcome, which would be the
20%. In my case, web development takes only a fraction of efforts in
comparison to Android development. Thus it’d yield more if I focus on
web development instead of doing both together.&lt;/p&gt;

&lt;p&gt;Android development was in turn handed over to colleagues who are more
good at Android development than web development. Yes, by outsourcing/automating
the 80% of work that yield merely 20% of the result, we can better focus
on the 20% input and reach more preformant outcome.&lt;/p&gt;

&lt;h2 id="vision"&gt;Vision&lt;/h2&gt;
&lt;p&gt;&lt;a id="#vision"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We see thousands of new business prospects every day. Sharing
econonmy, big data, AI, bots, IoT… People are raising/making millions
out of these new ideas while we humbly keep doing what we are doing–event
management solution.&lt;/p&gt;

&lt;p&gt;One is easy to get lost and wonder off from our original plan and goal.&lt;/p&gt;

&lt;p&gt;There are company vision and mission which everybody sticks to
while planning for the next feature and the next prospect. Don’t pivot
prematurely, too often, stick to the vision and mission — that we
are to make events simple and impactful.&lt;/p&gt;

&lt;p&gt;Thinking of myself as a company, what are my visions and missions? How
do I stay focus while actively seeking opportunity to grow myself? I’ll
have to consider that.&lt;/p&gt;

&lt;h2 id="value"&gt;Value&lt;/h2&gt;
&lt;p&gt;&lt;a id="#value"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;People work to chase moeny while feeling depressed even with a
above-average salary. To me, there’s a threshold which when exceeded
(that it sustains my living standard and funds my personal
growth/interests), job is more than a mere job.&lt;/p&gt;

&lt;p&gt;Job becomes a passion pass that threshold, that one is passionate in bringing
certain value to the company/team/customers. I think Peter Drucker’s
famous quote on employee motivation expresses more or less the same
notion.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Accept the fact that we have to treat almost anybody as a volunteer.
&lt;br&gt;— Peter Drucker&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;What value are you eager to bring to your organization aside from your
job descriptions (those are the basics)? Does your current role
encourage or discourage you from bringing that value?&lt;/p&gt;

&lt;h2 id="communication"&gt;Communication&lt;/h2&gt;
&lt;p&gt;&lt;a id="#communication"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;At one point everybody in the team has done a &lt;a href="https://www.therainmakergroupinc.com/human-capital-strategy-blog/bid/142889/using-disc-behavioral-styles-to-create-do-s-don-ts-of-communi"&gt;DISC&lt;/a&gt;
questionnaire to determine our own communication style.&lt;/p&gt;

&lt;figure&gt;
&lt;img src="./disc.jpg" width="75%"&gt;
&lt;figcaption&gt;This pretty much summarizes it all (retrived from &lt;a href="http://thesalesevangelist.com/how-disc-profiling-can-help-you-sell/"&gt;TSE 126&lt;/a&gt;)&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;The majority of the sales were &lt;em&gt;Steady&lt;/em&gt;, meaning they
are great listeners and empathic. Half of the engineers are &lt;em&gt;Compliant&lt;/em&gt;
while the rest are split by &lt;em&gt;Dominant&lt;/em&gt; and &lt;em&gt;Influential&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Well I am the &lt;em&gt;Dominant&lt;/em&gt; guy and pretty much still am nowadays.&lt;/p&gt;

&lt;p&gt;Being able to identify the communication style of a person, whether they
have filled in the questionnaire or not, is important in knowing
what we are expecting from each other.&lt;/p&gt;

&lt;p&gt;For instance, &lt;em&gt;dominant&lt;/em&gt; guy wants their voice heard, so much so that
they missed out much of the background information, leaving the listener
baffled. &lt;em&gt;Influence&lt;/em&gt; people may be rather impulsive when raising idea,
leaving out unfilled details those &lt;em&gt;Compliant&lt;/em&gt; people always want.&lt;/p&gt;

&lt;p&gt;Communication would be smooth and pleasant when we all know what to
expect from each other and how to communicate effective with different
types of people in the DISC framework.&lt;/p&gt;

&lt;p&gt;Details on DISC are available on &lt;a href="https://www.discprofile.com/what-is-disc/overview/"&gt;discprofile&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;edit: I renamed DiSC to DISC thanks to Bullwinkle pointing out their difference&lt;/em&gt;&lt;/p&gt;

&lt;h2 id="observe"&gt;Observe&lt;/h2&gt;
&lt;p&gt;&lt;a id="#observe"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Sum the CEO guy who got competitive in playing PS3 &lt;a href="https://www.amazon.com/Bandai-Namco-Gundam-Extreme-Playstation-3/dp/B005J2LW6A"&gt;GVG Extreme VS&lt;/a&gt; in office after lunch/work revealed
his secret to mastering the use of God Gundam (by that point he pretty
much beats everyone in the company) is to watch the games of experts.
In fact, he stayed overnight in office watching YouTube and practicing the combo.&lt;/p&gt;

&lt;p&gt;Software engineers prefer learning from examples in addition
to theories. We learn from clean ingenious abstractions in open source projects;
tutorials and boilerplates code written by the experienced, &lt;em&gt;etc.&lt;/em&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;If I have seen further it is by standing on the shoulders of Giants.
&lt;br&gt;— Isaac Newton&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="http://www.bbc.com/earth/story/20170123-how-insects-like-bumblebees-do-so-much-with-tiny-brains"&gt;Even insects&lt;/a&gt; know the importance of observation.&lt;/p&gt;

&lt;p&gt;By observing the approaches taken by the experts, beginners find it
easier to advance in an art, be it software development or competitive
gaming.&lt;/p&gt;

&lt;h2 id="self-improvement"&gt;Self-improvement&lt;/h2&gt;
&lt;p&gt;&lt;a id="#self_improvement"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;“Rule of 1.01” 1.01&lt;sup&gt;365&lt;/sup&gt; ≅ 37.8&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This rule that went viral on social networks comes from the book
“&lt;em&gt;成功のコンセプト～Principles for Success&lt;/em&gt;” written by 三木谷浩史, the CEO of Rakuten.
Precision aside, the rule means that one could go from 1 to 38 in a year
if with slight improvement as small as 0.01 everyday.&lt;/p&gt;

&lt;p&gt;Within a year, the field of software engineering has seen exciting
advancement in technology from deep learning powered AI, mass-market VR,
IoT with physical web, bots…&lt;em&gt;etc.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;It isn’t only about the technical skills that we should improve
ourselves upon. Geeks in the office always came showing off their latest
gadgets from VR headset to DJI drones; the sporty invites everybody for
a Muay Thai trial lesson, ping pong (until the last ball in office
accidentally ended up on the wrong side of the window),
regular swimming and squash; and the latest subject of interest has been
Rubik’s Cube (we got 2x2, 3x3, Pyramorphix, 12 sides and even irregular).&lt;/p&gt;

&lt;p&gt;Everyone is an expert in something and according to the &lt;a href="#observe"&gt;observe&lt;/a&gt;
section, there is no better and cheaper way than your office to improve yourself
on random matters by observing the experts.&lt;/p&gt;

&lt;h2 id="respect"&gt;Respect&lt;/h2&gt;
&lt;p&gt;&lt;a id="#respect"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Being respectful is more than just acting politely.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Would you please go to hell?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Polite, yes. Respectful, not quite.&lt;/p&gt;

&lt;p&gt;What’s the deal? Being respectful implies a wish to be treated with
respect in return. For example, I keep the meeting as short as possible
to respect the time of those joining the meeting in hope of not being
trapped in a needlessly long meeting tomorrow.&lt;/p&gt;

&lt;p&gt;Thus in a way respect feels even like &lt;a href="https://en.wikipedia.org/wiki/Karma"&gt;karma&lt;/a&gt;.
I confess: I fail to respect people occasionally, perhaps due to things not
working out or I was rushing for a deadline. I totally
feel the guilt as I am writing this. Sure, karma does come back and bite
you. What else could I say? Be a decent person.&lt;/p&gt;

&lt;p&gt;Despite some of the rules are outdated (those are &lt;em&gt;Victorian&lt;/em&gt;!)
George Washington’s “&lt;a href="http://www.foundationsmag.com/civility.html"&gt;&lt;em&gt;Rules of Civility &amp;amp; Decent Behavior in Company and Conversation&lt;/em&gt;&lt;/a&gt;”
is still a good reference to behaving respectfully.&lt;/p&gt;

&lt;h2 id="listen"&gt;Listen&lt;/h2&gt;
&lt;p&gt;&lt;a id="#listen"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Listening skills in essential to effective collaboration at work and
interpersonal relationship. Missing or misinterpreting a message may
lead to big mistakes.&lt;/p&gt;

&lt;p&gt;Have you played a game called &lt;a href="https://en.wikipedia.org/wiki/Chinese_whispers"&gt;&lt;em&gt;Chinese whispers&lt;/em&gt;&lt;/a&gt;?
People queue up in a line, the first person receives a message which has
to be passed down the line. Limitaions may apply such as the
listener cannot speak while listening. Error and miscommunication occurs
almost every game no matter how hard the players try.&lt;/p&gt;

&lt;p&gt;The &lt;em&gt;Chinese whispers&lt;/em&gt; game teaches us the fact that listening alone is
difficult even for a single message. Consider how much information we
receive and pass on to other people at work?&lt;/p&gt;

&lt;p&gt;Tricks on effective listening, which I have developed through practice
with people of different &lt;a href="#communication"&gt;communication styles&lt;/a&gt; are:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;wait until the speaker finishes speaking, give visual signal (e.g.
raise hand) when you must interrupt&lt;/li&gt;
  &lt;li&gt;do not join an on-going conversation asking for background unless the
speaker spontaneously does that&lt;/li&gt;
  &lt;li&gt;take note on comments/questions you’d raise later&lt;/li&gt;
  &lt;li&gt;rephrase the speaker’s message for confirmation&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id="acknowledgement"&gt;Acknowledgement&lt;/h2&gt;
&lt;p&gt;&lt;a id="#acknowledgement"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Ging! 👊
&lt;br&gt;— kudos given by someone&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;People feel more motivated in doing something when a performant outcome
is achieved according to &lt;a href="https://en.wikipedia.org/wiki/Expectancy_theory"&gt;expectancy theory&lt;/a&gt;.
By performant outcome I mean achievement, compliment, &lt;a href="http://www.urbandictionary.com/define.php?term=kudos"&gt;kudos&lt;/a&gt;, acknowledgement…&lt;em&gt;etc.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Our project manager does so by showing a blurred profile pic bubble on top of the
features we developed on our company-wide quarterly update. Sir, I have no
complain except for pics being blurry.&lt;/p&gt;

&lt;p&gt;But I digress. By humbly giving acknowledgements to coworkers, people
tend to becoming motivated at their works, also helps with deflating
unintentionally inflated ego.&lt;/p&gt;

&lt;h2 id="process"&gt;Process&lt;/h2&gt;
&lt;p&gt;&lt;a id="#process"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;People dread process when it becomes bureaucratic and inflexible while the
other end of the spectrum is haphazard procedures that nobody has idea
what is happening and what is the next step to take. It is suboptimal at
the two ends of the spectrum.&lt;/p&gt;

&lt;p&gt;A resaonable amount of process acts as both guidelines and promises.
Process is guideline for those unfamiliar with how information flow and how
tasks are handled. Process is for everybody to make reasonable expectation
on the time-frame and result that comes out of it.&lt;/p&gt;

&lt;p&gt;Tech team needs Agile development process to ensure features are shipped
and the feedback comes in to the right person to decide what to do next.
Likewise sales team needs the pipeline to win deals and evaluate performance.
Admin needs a process so everybody gets their paycheck on time.&lt;/p&gt;

&lt;p&gt;Process should be well documented and stored in a centralized location
available to the relevant personnel. For example, the process of
deploying a new release to production is documented and even recorded in
video, available to developers in the project repository.&lt;/p&gt;

&lt;h2 id="obsession"&gt;Obsession&lt;/h2&gt;
&lt;p&gt;&lt;a id="#obsession"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Have you been so obsessed with something that you have to write up a demo
for it even though it is 2AM and you have sat in front of the computer
coding for over 8 hours? Oh, to make things worse, there is a 9:30AM team
meeting coming up too.&lt;/p&gt;

&lt;p&gt;Sometimes you just can’t stop doing something as if it is &lt;a href="http://www.goodreads.com/quotes/426930-without-obsession-life-is-nothing"&gt;the only
thing matter&lt;/a&gt; to you at the moment?&lt;/p&gt;

&lt;p&gt;For a period I was obsessed with a certain technology (which I cannot
name because it is related to my work), so much so that I coded up a
tech demo overnight and showed to my coworkers.&lt;/p&gt;

&lt;p&gt;Such obsession is what drives us forward. Some may question the
difference between passion and obsession. A quick Google search does not
give me an &lt;a href="http://edgeperspectives.typepad.com/edge_perspectives/2010/03/passion-versus-obsession.html"&gt;explanation&lt;/a&gt; short enough so I have to make it up myself.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Passion is what you actively pursue in long term.&lt;/p&gt;

  &lt;p&gt;Obsession is what you frantically pursue for a short period
of time.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Obsession occurs only on occasion, like sudden burst of inspiration. The
best one could do is to hold on to it, and develop it before it withers.
Do not procrastinate on something if you find it interesting and worth
working on.&lt;/p&gt;

&lt;h2 id="fun"&gt;Fun&lt;/h2&gt;
&lt;p&gt;&lt;a id="#fun"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Work without fun could be dull and exhausting.&lt;/p&gt;

&lt;figure&gt;
&lt;img src="./work-no-play.gif"&gt;
&lt;figcaption&gt;Side effect of work&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;Work hard, play hard. In EventXtra there are many kinds of fun, with
which we bond and relieve stress:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;dart&lt;/li&gt;
  &lt;li&gt;PlayStation 3&lt;/li&gt;
  &lt;li&gt;skating board&lt;/li&gt;
  &lt;li&gt;roller skating&lt;/li&gt;
  &lt;li&gt;Bonsai making&lt;/li&gt;
  &lt;li&gt;Muay Thai&lt;/li&gt;
  &lt;li&gt;ping pong&lt;/li&gt;
  &lt;li&gt;squash&lt;/li&gt;
  &lt;li&gt;swimming&lt;/li&gt;
  &lt;li&gt;hoverboard&lt;/li&gt;
  &lt;li&gt;mindfulness&lt;/li&gt;
  &lt;li&gt;quadcopter&lt;/li&gt;
  &lt;li&gt;multi-player PC games&lt;/li&gt;
  &lt;li&gt;Rubik’s cube&lt;/li&gt;
  &lt;li&gt;cycling&lt;/li&gt;
  &lt;li&gt;hiking&lt;/li&gt;
  &lt;li&gt;board games&lt;/li&gt;
  &lt;li&gt;after work movie watching&lt;/li&gt;
  &lt;li&gt;hammock&lt;/li&gt;
  &lt;li&gt;toy cockroach&lt;/li&gt;
  &lt;li&gt;placing tissue paper on someone who’s sleeping&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And many more which I couldn’t recall.&lt;/p&gt;

&lt;h2 id="take-a-stand"&gt;Take a stand&lt;/h2&gt;
&lt;p&gt;&lt;a id="#take_a_stand"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To avoid the weird atmosphere spawning from disagreement, or see it as
inappropriate to challenge the superior, people would stay quiet even when
facing something they don’t agree on.&lt;/p&gt;

&lt;p&gt;Until one day someone told me, if I don’t take a stand for myself nobody
would. There should be someone leading an opinion and when there is none
it might as well be myself.&lt;/p&gt;

&lt;p&gt;Taking a stand and challenge the opposite helps raising the standard and
reaching a compromise such that both parties are satisfied relative
to one side having to swallow what they don’t want.&lt;/p&gt;

&lt;p&gt;This does not mean one should challenge everyone on every matter. People
should step up and take a stand when the potential risk of a decision
hasn’t been fully discussed and understood. Taking a stand is a way to
open up discussion and let others see what you see.&lt;/p&gt;

&lt;h2 id="hardware"&gt;Hardware&lt;/h2&gt;
&lt;p&gt;&lt;a id="#hardware"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Do you use the best tools money can buy?
&lt;br&gt;— #9 of &lt;a href="https://www.joelonsoftware.com/2000/08/09/the-joel-test-12-steps-to-better-code/"&gt;The Joel Test&lt;/a&gt;, &lt;em&gt;one of&lt;/em&gt; many ways to rate a software team&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;First off I must say whenever I consider whether my current hardware set
up is good enough for my job, this question from the Joel Test pops up
in my mind, but then the “best tools” part is arguable so I rewrites it
into:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Do you use the most &lt;strong&gt;cost-effective&lt;/strong&gt; tools the COO is &lt;strong&gt;willing&lt;/strong&gt; to &lt;strong&gt;source&lt;/strong&gt;
for you?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I do not need a workstation just to develop in Rails or compile Android
app. When I do discover the need to upgrade my hardware, the COO would
always suggestion other cost-effective alternatives.&lt;/p&gt;

&lt;p&gt;So I ripped a 8GB RAM module off my co-workers’ Mac mini (with
permission from the COO, of course) because an admin person does not need
16GB of RAM to do edit spreadsheets. An extra 8GB RAM saved my Mac from
freezing while compiling Android apps.&lt;/p&gt;

&lt;figure&gt;
&lt;img src="./hardware.jpg"&gt;
&lt;figcaption&gt;2 monitors, Mac mini (2012) at the back, FILCO NINJA 2 (brown switch)&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;When the company is incapable or it is unjustifiable of buying you an expensive
equipments, it is up to yourself to source it. I brought my own set of
headphone and mechanical keyboard to work simply because it works better
than what was offered.&lt;/p&gt;

&lt;p&gt;Therefore, I am adding another argument to my version of Joel
Test#9:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Do you use the most &lt;strong&gt;cost-effective&lt;/strong&gt; tools the COO is &lt;strong&gt;willing&lt;/strong&gt; to &lt;strong&gt;source&lt;/strong&gt;
for you; or that you would prepare them yourself for the best
interest of yourself and the company?*&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;* not a valid reason for the company to not prepare hardware of accepable
spec&lt;/p&gt;

&lt;h2 id="expectation"&gt;Expectation&lt;/h2&gt;
&lt;p&gt;&lt;a id="#expectation"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Under-promise and over-deliver.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Managing expectation, both to teamamtes and to customers, are
difficult. Rule of thumb is that one should under-promise and
over-deliver.&lt;/p&gt;

&lt;p&gt;I am skeptical toward this proposition because under-promising is like
telling customers we couldn’t offer something while we actually can; if
customers stayed, they would be (&lt;a href="http://www.inc.com/jessica-stillman/underpromise-and-overdeliver-is-terrible-advice.html"&gt;arguably&lt;/a&gt;)
surprised over the outcome exceeding their expectation; but if customers
turned away from us because we under-promise, it doesn’t work.&lt;/p&gt;

&lt;p&gt;Managing expectation by under-promising when customers asks for
a fix is rather valid because developers do need some margin for task
switching, testing the fix and deploying it.&lt;/p&gt;

&lt;p&gt;To coworkers, especially the project manager, I tend to provide them
with the accurate picture as it’s the project manager’s task to schedule
tasks and guarantee delivery.&lt;/p&gt;

&lt;p&gt;When it comes to manageing expectation, there is no rule of thumb to
accurately- or under-promise. The most important point is not to
over-promise and under-deliver.&lt;/p&gt;

&lt;h2 id="ask"&gt;Ask&lt;/h2&gt;
&lt;p&gt;&lt;a id="#ask"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Many dread the feeling of being rejected when they ask people for
something, be it a small favor, undocumented information or an
unordinary request.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Sometimes all you have to do is ask, and it can lead to all your dreams coming true
&lt;br&gt;— Randy Pausch&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Pausch’s quote above which I read from his book “&lt;em&gt;The Last Lecture&lt;/em&gt;”
helped me a lot when I was an exchange student in UC Davis. The voice
inside my head reminds me: “It costs nothing asking.”&lt;/p&gt;

&lt;p&gt;Most of the time people are generous in offering help or useful
information.&lt;/p&gt;

&lt;h2 id="compromise"&gt;Compromise&lt;/h2&gt;
&lt;p&gt;&lt;a id="#compromise"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;figure&gt;
&lt;img src="./compromise.jpg" width="500px"&gt;
&lt;figcaption&gt;Don’t be like Team Plasma&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;Compromise is common in everyday life: you make way for others, hold
the doors, take the next train instead of squeezing into this one…&lt;/p&gt;

&lt;p&gt;When designing software and coping with product manager, compromise
often takes place. This is seen the most effective way of us &lt;em&gt;getting
there&lt;/em&gt; where both parties want to go.&lt;/p&gt;

&lt;p&gt;Our product manager welcomes counter-offering. When we are short of time
or human resource, scope is reduced and features altered to avoid
overnight death march and ensure product manager has something to deliver.
Of course we had to make up for the compromises later but the openness
and initiative to counter-offering help the team run smoother.&lt;/p&gt;

&lt;h2 id="responsibility"&gt;Responsibility&lt;/h2&gt;
&lt;p&gt;&lt;a id="#responsibility"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Rule 82&lt;sup&gt;nd&lt;/sup&gt; “Undertake not what you cannot Perform but be Careful to keep your Promise.”
&lt;br&gt;— quoted from Rules of Civility &amp;amp; Decent Behavior in Company and Conversation&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;One should be responsible for what he promised. I’d take that as the
bottom line. For the same reason I do not prefer
over-promising. Unable to deliver what was expected is
depressing for everybody.&lt;/p&gt;

&lt;p&gt;In fact, we pledged to many things without even noticing them. Say,
one is expected to do housework; to come to a meeting on time; to watch
out for the coworkers and lend them a helping hand when needed…&lt;/p&gt;

&lt;p&gt;Not that we signed a contract or made an oral promise that we should do
them, they were simply the &lt;em&gt;expected&lt;/em&gt; behavior that we practice and by
practicing them we are responsible.&lt;/p&gt;

&lt;p&gt;Let’s take another example, when a bug is located on a certain feature,
slipping in a fix on time isn’t explicitly requested but is usually expected.
Walking away from work and not responding to text and phone during
work hour is far from being responsible unless there’s an emergency.&lt;/p&gt;

&lt;h2 id="social-network"&gt;Social network&lt;/h2&gt;
&lt;p&gt;&lt;a id="#social_network"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Building a social network early in career helps discovering and
leveraging opportunities afterwards. In fact, I became an intern in
EventXtra because of a personal contact who was a previous intern there.&lt;/p&gt;

&lt;p&gt;When you start looking, the world is unexpectedly small. When my friend
studying HKUST went to Silicon Valley for an internship, his roommate
was another friend of mine from CUHK! This is called &lt;a href="https://en.wikipedia.org/wiki/Six_degrees_of_separation"&gt;Six degree of separaion&lt;/a&gt;,
where you can reach anyone in the world by asking your friend, then your
friend’s friends, and so on for 6 times.&lt;/p&gt;

&lt;p&gt;My freelance jobs usually come from referral, and they are not
necessarily from my tech-savvy people list. I’ve once had a client coming to
me because I am a classmate of their highschool schoolmate, almost felt
like magic.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;But ask any accomplished CEO or entrepreneur or professional how they achieved their success, and I guarantee you’ll hear very little business jargon. What you will mostly hear about are the people who helped pave their way…&lt;/p&gt;

  &lt;p&gt;— quoted from Never Eat Alone&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Social network is an important element in both career and every day
life. Just like there’s a go-to person when you need something, your
go-to people also have their own set of go-to people, and thus the wider
and heterogeneous your social network is, the higher the odds that you
could seek help from your network.&lt;/p&gt;

&lt;h2 id="information"&gt;Information&lt;/h2&gt;
&lt;p&gt;&lt;a id="#information"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Many people ask before at least googling for something. Although this way
they could get the information relatively effortlessly, it is
distracting and simply shifting the googling part to another person,
giving rise to the phrase ‘&lt;em&gt;Let me google that for you&lt;/em&gt;’ or ‘&lt;em&gt;&lt;a href="https://lmgtfy.com/"&gt;LMGTFY&lt;/a&gt;&lt;/em&gt;’.&lt;/p&gt;

&lt;p&gt;With the power of googling even a lay person can
perform a task as if he’s experienced. One instance of which has been
documented in another post &lt;a href="../../blog/doing-things-the-layman-way"&gt;Doing things the layman
way&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;However, the web is swarming with content farm and fake information.
The ablity to assess the credibility of information, just like what we
were taught in college, is becoming crucial in decision making.&lt;/p&gt;

&lt;h2 id="family"&gt;Family&lt;/h2&gt;
&lt;p&gt;&lt;a id="#family"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Family is the community one most committed in. One gives the most to and
received the most from family.&lt;/p&gt;

&lt;p&gt;Yet as a working adult it became easy give excuses like ‘this
feature must be shipped this week’, ‘it would be more convenient if I
eat outside’, ‘I must take a break during weekends’…&lt;/p&gt;

&lt;p&gt;Ignoring your family would come back to bite you when you suddenly find
your parents growing white hairs and their health are going downhill, or
that you failed to witness the growth of your sister.&lt;/p&gt;

&lt;p&gt;One should care for his family because those are the closest people in
his life that would unconditionally love and care for him. Naturally, he
should do the same.&lt;/p&gt;

&lt;p&gt;Help with housework, cook a dinner, go out for a family day trip, buy
little presents every now and then and talk to each other, see how’re
their lives and what difficulties they face.&lt;/p&gt;

&lt;h2 id="sharing"&gt;Sharing&lt;/h2&gt;
&lt;p&gt;&lt;a id="#sharing"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It became a habit for me to share useful articles and videos I saw
online to whichever community I was in. I opened a Google Space
community within company, and I share links to smaller chat groups I
with my friends on Telegram and Messenger.&lt;/p&gt;

&lt;p&gt;Not everyone follows websites and blogs on RSS reader like Feedly, or
join multiple developer communities on Facebook. There are 700-800 new posts
every week on Hacker News according to &lt;a href="http://labs.im/hnstat/"&gt;HN stats&lt;/a&gt;
and who’s there to filter them and send only the relevant ones to our
internal chat group?&lt;/p&gt;

&lt;p&gt;Well, it turned out I am a sucker for online articles and whenver I find
one useful I share it to the group. It was rewarding seeing comments
and articles being posted by other users in the group. Keep it up and
you’ll have an active community sharing knowledge and everybody helps
improving each other.&lt;/p&gt;

&lt;h2 id="confidence"&gt;Confidence&lt;/h2&gt;
&lt;p&gt;&lt;a id="#confidence"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Impostor syndrome, a situation where one feels inferior to his fellow
colleagues and members in the community. One feels lack of confidence,
motivation and fear of showing his work or producing any new work to the
public.&lt;/p&gt;

&lt;p&gt;We all have suffered from some degree of imposter syndrome haven’t we?
We think we are faking our work, our work are not as good as other and
thus we don’t worth what we were paid for.&lt;/p&gt;

&lt;p&gt;Recall the days when you felt a sense of accomplishment with a mere
‘Hello World’ program, they days when you were an amateur.&lt;/p&gt;

&lt;p&gt;To quote Austin Kleon from his book “&lt;em&gt;Show Your Work!&lt;/em&gt;:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;The world is changing at such a rapid rate that it’s turning us all
into amateurs. Even for professionals, the best way to flourish is to
retain an amateur’s spirit and embrace uncertainty and the unknown.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;And previously he claimed:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Amateurs are not afraid to make mistakes or look ridiculous in the
public. They’re in love, so they don’t hesitate to do work that other
think of as silly or just plain stupid.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;To defeat imposter syndrome, one should &lt;em&gt;retain an amateur’s spirit&lt;/em&gt;,
try things out and never afraid of failing. Failing isn’t necessarily a
bad thing, it promotes learning from our own mistakes, and thus improves
our performance. Then there, comes confidence.&lt;/p&gt;

&lt;h2 id="take-small-steps"&gt;Take small steps&lt;/h2&gt;
&lt;p&gt;&lt;a id="#take_small_steps"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;People procrastinates on one thing or another don’t they? Especially
when a task seems too large, or too time consuming, or too boring, or
I-have-got-other-things-for-now™.&lt;/p&gt;

&lt;p&gt;I too procrastinated until I discovered this nice trick to overcome it:
take smaller steps.&lt;/p&gt;

&lt;p&gt;A monolithic task seems difficult to conquer, thus we procrastinate. But
we too are programmers who are good at divide and conquer. First write
down in bullet points/steps what to do to accomplish a big task.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# Cooking my dinner

1. look up a recipe online, with ingredients easy to come by
2. go buying the ingredients
3. process the ingredients
4. cook according to the recipe
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;At this point, any one of the sub-tasks would seem easy enough to do.
The trick is, by finishing the first step, there comes a sense of
accomplishment that would encourage you to take the next step, and the
next…before long you would find you have conquered the task that
originally looked so big you had to procrastinate on.&lt;/p&gt;

&lt;h2 id="automation"&gt;Automation&lt;/h2&gt;
&lt;p&gt;&lt;a id="#automation"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A programmer once wrote some scripts to automate anything that requires more
than 90 seconds of his time like sending a message to his wife when he’s still working at 9pm.
The project went viral and has received 26k+ stars on &lt;a href="https://github.com/NARKOZ/hacker-scripts"&gt;GitHub&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;This interesting news inspired me to build more aliases to shorten my work
flow. It used to take 4 commands to push to &lt;code&gt;qa&lt;/code&gt; branch, now it only takes 2.&lt;/p&gt;

&lt;pre&gt;&lt;code class="language-bash"&gt;# Before
$ git up # see https://github.com/aanand/git-up
$ git checkout qa
$ git merge feature
$ git push origin qa

# After
$ alias prestaging
prestaging='git up; git checkout qa; git merge '
$ prestaging feature
$ git push origin qa
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;One of our DevOps did much batter than me by integrating
&lt;a href="https://github.com/brigade/overcommit"&gt;overcommit&lt;/a&gt;, a tool for running
&lt;code&gt;rubocop&lt;/code&gt; and linting before a commit is committed. Gone was the time
when we push and see the specs fail because of stupid reasons like
tailing whitespace or missing blank lines before and after &lt;code&gt;private&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;It became a habit of mine to write up scripts for starting, building and
stopping Docker containers in projects so I can set up once and never
again having to worry about the parameters.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <id>tag:blog.tommyku.com,2017-01-09:/blog/have-fun-building-browser-start-page/</id>
    <title type="html">Have fun building browser start page</title>
    <published>2017-01-09T16:00:00Z</published>
    <updated>2017-01-09T16:00:00Z</updated>
    <link rel="alternate" href="https://blog.tommyku.com/blog/have-fun-building-browser-start-page/"/>
    <content type="html">
&lt;figure&gt;
&lt;img src="./multiple-tiles.jpg"&gt;
&lt;figcaption&gt;My current setup&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;Maybe it was my colleague, or maybe I feel the heat from &lt;a href="https://www.reddit.com/r/startpages/"&gt;/r/startpages&lt;/a&gt;…
Whichever the reason is, I began building browser start page.&lt;/p&gt;

&lt;p&gt;Default browser start pages are totally fine. Engineers’ put in hard
work to make it convenient and visually pleasing, but it is not &lt;em&gt;my&lt;/em&gt;
page. Just as people customize their desktop wallpaper, I want my browser
start page to do &lt;em&gt;this&lt;/em&gt; and &lt;em&gt;that&lt;/em&gt; while showing a refreshing background
image.&lt;/p&gt;

&lt;p&gt;More than just simple background image replacement, or listing bookmarks in
various ways, it should show time and weather which are cool to look at
but essentially useless.&lt;/p&gt;

&lt;p&gt;The finished code is available at:&lt;/p&gt;

&lt;div style="text-align: center;"&gt;
  &lt;div class="github-card" data-github="tommyku/start-page-demo" data-width="400" data-height="" data-theme="default"&gt;&lt;/div&gt;
  &lt;script src="//cdn.jsdelivr.net/github-cards/latest/widget.js"&gt;&lt;/script&gt;
&lt;/div&gt;

&lt;h3 id="setting-things-up"&gt;Setting things up&lt;/h3&gt;

&lt;h4 id="using-webpack-as-module-bundler"&gt;Using webpack as module bundler&lt;/h4&gt;

&lt;p&gt;In this start-page project, &lt;code&gt;bower&lt;/code&gt; is substituted by &lt;code&gt;webpack&lt;/code&gt;, a
module bundler which compiles the source code along with modules used.
In &lt;code&gt;bower&lt;/code&gt;’s way, components are first put inside &lt;code&gt;bower_components&lt;/code&gt; folder and
then included in the HTML page one by one, while with &lt;code&gt;webpack&lt;/code&gt; modules
are loaded as simple as calling &lt;code&gt;require('module-name')&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class="language-coffeescript"&gt;# example.coffee
$ = require 'cash-dom'
$(document.body).text 'Hello World' # 'Hello World' is injected into &amp;lt;body&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Webpack uses &lt;code&gt;loaders&lt;/code&gt; to pipe files through a set of processors when we
call &lt;code&gt;require&lt;/code&gt; such that &lt;code&gt;gulp-sass&lt;/code&gt; and &lt;code&gt;gulp-coffee&lt;/code&gt; are no longer
needed.&lt;/p&gt;

&lt;pre&gt;&lt;code class="language-coffeescript"&gt;# example.coffee
require '../css/app.scss'
# content of `app.scss` is passed through style-loader, css-loader, sass-loader and postcss-loader
# then injected into the page with JavaScript
# note: better keep a copy of the stylesheet inside &amp;lt;noscript&amp;gt; just in case
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class="language-javascript"&gt;// webpack.config.js
module.exports = {
// ...
  module: {
    loaders: [
      { test: /\.scss$/, loader: "style-loader!css-loader?importLoaders=1!sass-loader!postcss-loader" },
    ]
  }
// ...
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id="using-yarn-along-with-npm"&gt;Using yarn along with npm&lt;/h4&gt;

&lt;p&gt;&lt;code&gt;npm&lt;/code&gt; is fine but there exists &lt;code&gt;yarn&lt;/code&gt; that runs faster and output better
information while running &lt;code&gt;npm|yarn install&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;yarn&lt;/code&gt; generates a &lt;code&gt;yarn.lock&lt;/code&gt; file that records packages with version
numbers so the same packages are installed across machines.&lt;/p&gt;

&lt;p&gt;For more of &lt;em&gt;yarn vs npm&lt;/em&gt; see this &lt;a href="https://www.sitepoint.com/yarn-vs-npm/"&gt;post&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id="brainstorm-what-to-add"&gt;Brainstorm what to add&lt;/h3&gt;

&lt;p&gt;Browser start page is personal. There is no pattern or best practices
associated with the genre.&lt;/p&gt;

&lt;p&gt;Here is a list of stuff I might include:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;search bar #&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;bookmarks&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;clock (w/without alarm) #&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;weather report/forecast #&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;calendar&lt;/li&gt;
  &lt;li&gt;kitten pics, lots of them&lt;/li&gt;
  &lt;li&gt;notepad&lt;/li&gt;
  &lt;li&gt;uptime of your current relationship&lt;/li&gt;
  &lt;li&gt;doomsday countdown&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;small&gt;&lt;attr&gt;#&lt;/attr&gt; included in demo repo&lt;/small&gt;&lt;/p&gt;

&lt;p&gt;The &lt;a href="https://startpages.github.io/"&gt;Startpage Emporium&lt;/a&gt; and &lt;a href="https://www.reddit.com/r/startpages/"&gt;/r/startpages&lt;/a&gt;
are good places for seeking inspiration.&lt;/p&gt;

&lt;p&gt;As often visited as a start page, it’s better kept small
and fast. Consider importing external assets only when necessary
and minimize the &lt;code&gt;.js&lt;/code&gt; files in production build.&lt;/p&gt;

&lt;h3 id="css-grid"&gt;CSS grid&lt;/h3&gt;

&lt;p&gt;CSS grid is probably the reason for broken layout when you first build
and open build from the demo repo.&lt;/p&gt;

&lt;figure&gt;
&lt;img src="./broken.jpg"&gt;
&lt;figcaption&gt;How broken it looks with CSS grid disabled&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;The design shown of the demo is so simple it can be effortlessly
implemented with grids from &lt;code&gt;foundation&lt;/code&gt;, &lt;code&gt;pure.css&lt;/code&gt; or &lt;code&gt;bootstrap&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Flexbox is too a viable option if I want to avoid UI framework entirely,
yet considering how troublesome flexbox is when implementing a 2D
nested layout (mainly for the bloated meaningless HTML structure), I opted for CSS grid instead.&lt;/p&gt;

&lt;figure&gt;
&lt;img src="./caniuse-css-grid.jpg"&gt;
&lt;figcaption&gt;Fact: CSS grid isn’t widely supported (as of Jan 2017)&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;In Google Chrome 29 through 56, CSS grid is enabled through
‘experimental Web Platform features’ flags in
&lt;a href="chrome://flags"&gt;chrome://flags&lt;/a&gt;, so I did that.&lt;/p&gt;

&lt;p&gt;A grid is exactly a grid, a 2D layout structure with grid cells and
lines defined using slightly abstract CSS syntax of
&lt;code&gt;grid-template-columns&lt;/code&gt; and &lt;code&gt;grid-template-rows&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class="language-scss"&gt;/* src/css/app.scss */
.grid-container {
  height: 100vh;
  display: grid;
  grid-template-columns: 12% 38% 38% 12%;
  grid-template-rows: 25% 25% 25% 25%
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The above piece of CSS code defines a 4x4 grids with respective to cell
sizes (or separation between grid lines). Other than an extra grid
container that contains all grid elements, there is no need to change
the existing HTML DOM structure to accommodate for the CSS grid layout.&lt;/p&gt;

&lt;p&gt;I look forward to CSS grid being a default feature in major browsers.
Meanwhile, a comprehensive guide is available on &lt;a href="https://css-tricks.com/snippets/css/complete-guide-grid/"&gt;CSS tricks&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id="chrome-new-tab-page-override"&gt;Chrome new-tab page override&lt;/h3&gt;

&lt;p&gt;Chrome pages namely Bookmark manager, History and New Tab pages can be
replaced by arbitrary Chrome extension with &lt;code&gt;chrome_url_overrides&lt;/code&gt;
declared in &lt;code&gt;manifest.json&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Note other extensions might override your url overrides. In such case,
disable those extensions.&lt;/p&gt;

&lt;pre&gt;&lt;code class="language-json"&gt;/* manifest.json */
{
  "name": "Start page demo",
  "description": "New tab replacer demo",
  "version": "0.1",
  "incognito": "split",
  "chrome_url_overrides": {
    "newtab": "index.html"
  },
  "content_security_policy": "script-src 'self' 'unsafe-eval'; object-src 'self'",
  "manifest_version": 2
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Unfinished extensions are loaded into Chrome by clicking &lt;code&gt;Load
unpacked extension...&lt;/code&gt; in &lt;a href="chrome://extensions/"&gt;chrome://extensions&lt;/a&gt;
page.&lt;/p&gt;

&lt;h3 id="sinitra-web-proxy-on-docker"&gt;Sinitra web proxy on Docker&lt;/h3&gt;

&lt;p&gt;Have you experienced &lt;a href="https://developer.mozilla.org/en-US/docs/Web/Security/Same-origin_policy"&gt;&lt;em&gt;Same-origin policy&lt;/em&gt;&lt;/a&gt;
getting in the way when you attempt to make a &lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Access_control_CORS"&gt;cross-origin HTTP request&lt;/a&gt;,
which most likely to happen when making an API request to 3rd party
service.&lt;/p&gt;

&lt;p&gt;While it enhances security, it’s hindering legitimate API calls we want
to make, specifically &lt;a href="https://darksky.net/dev/"&gt;Dark Sky API&lt;/a&gt; for weather
report.&lt;/p&gt;

&lt;pre&gt;&lt;code class="language-coffee"&gt;# src/js/weather.js.coffee
request = require 'superagent'

module.exports = {
  getWeather: ()-&amp;gt;
    request.get('http://0.0.0.0:1080/weather')
  # ...
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;In the demo repo &lt;code&gt;weather.js&lt;/code&gt; makes a call to a local server listening
at 1080 port which essentially wraps the Dark Sky API.&lt;/p&gt;

&lt;p&gt;Make sure your’ve set the API key at the line &lt;code&gt;ForecastIO.api_key =
'YOUR_DARK_SKY_API_KEY'&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;The proxy server code is in &lt;code&gt;web-proxy&lt;/code&gt; folder of the demo. With
Docker installed, starte the server by running:&lt;/p&gt;

&lt;pre&gt;&lt;code class="language-bash"&gt;$ ./bin/build
$ ./bin/run
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;For those not running Docker, the server can still be started by:&lt;/p&gt;

&lt;pre&gt;&lt;code class="language-bash"&gt;$ bundle install
$ ruby server.rb
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;While the server itself is straight-forward proxy that returns exactly
what Dark Sky API returns, Docker conveniently comes with &lt;code&gt;--restart=always&lt;/code&gt; flag which
starts the container automatically on reboot, allowing us to run the
proxy with startpage with zero operational overhead.&lt;/p&gt;

&lt;h3 id="maskingfaking-it-til-its-loaded"&gt;Masking/faking it til it’s loaded&lt;/h3&gt;

&lt;h4 id="masking-the-render"&gt;Masking the render&lt;/h4&gt;

&lt;p&gt;The page looks ugly for a split second before any CSS is injected and image loaded, then
everything looks normal again. There should be an element over
everything else masking all the ugly elements before the page is fully
loaded.&lt;/p&gt;

&lt;pre&gt;&lt;code class="language-html"&gt;&amp;lt;!-- output/index.html --&amp;gt;
&amp;lt;html&amp;gt;
  &amp;lt;head&amp;gt;
    &amp;lt;!-- ... --&amp;gt;
    &amp;lt;style&amp;gt;
      .mask {
        position: fixed;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background-color: white;
        z-index: 10000;
        opacity: 1;
        transition: opacity 0.2s linear;
        will-change: opacity;
      }
    &amp;lt;/style&amp;gt;
    &amp;lt;!-- ... --&amp;gt;
  &amp;lt;/head&amp;gt;
  &amp;lt;body&amp;gt;
    &amp;lt;div class="mask"&amp;gt;&amp;lt;/div&amp;gt;
    &amp;lt;!-- ... --&amp;gt;
  &amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The mask does only one thing: mask the page in white before (hopefully) some JavaScript set
it’s opacity to 0, revealing the fully loaded page under it.&lt;/p&gt;

&lt;s&gt;(exactly why you cannot click anything in the page…the mask element is still covering everything after unmasking)&lt;/s&gt;

&lt;p&gt;&lt;em&gt;edit: elements underneath the mask can be clicked by setting &lt;code&gt;pointer-events: none&lt;/code&gt; on the mask&lt;/em&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class="language-coffeescript"&gt;# main.coffee
# ...
WeatherPanel = require './weather_panel.js.coffee'
DateTimePanel = require './date_time_panel.js.coffee'
Wallpaper = require './wallpaper.js.coffee'

unMask = -&amp;gt;
  $('.mask').css {
    opacity: 0,
    'pointer-events': 'none'
  }

  $ -&amp;gt;
    (new Wallpaper()).bootstrap()
    (new WeatherPanel()).bootstrap()
    (new DateTimePanel()).bootstrap()
    unMask()
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The demo uses a bad approximation on the timing of unmasking. Bootstraping the panels do not mean
their respective assets (e.g. wallpaper, weather data) are fully loaded. This could be improved by a
&lt;code&gt;Promise&lt;/code&gt;-based approach on each bootstrapped class, but we are simplifying here.&lt;/p&gt;

&lt;h4 id="faking-api-call"&gt;Faking API call&lt;/h4&gt;

&lt;p&gt;As it turns out, everything looks fine even on unmasking (disclaimer: works on my machine),
even the weather data is there despite our local proxy hasn’t returned anything yet.&lt;/p&gt;

&lt;pre&gt;&lt;code class="language-coffeescript"&gt;# src/js/weather_panel.js.coffee
# ...
class WeatherPanel
  # ...
  updatePage: -&amp;gt;
    return unless @report?
    $('.temperature').html "#{@lo @report.temperature}&amp;amp;deg;"
    $('.summary').html @report.current_summary
    $('.weather-icon').prop src: "static/weatherIcons/#{@report.icon}.png"

  getWeatherHandler: (err, res)-&amp;gt;
    return unless res? &amp;amp;&amp;amp; res.body.currently?
    current = res.body.currently
    @report =
      icon: weather.getWeatherIcon(current.icon)
      current_summary: current.summary
      temperature: current.temperature
      hour_summary: res.body.hourly.summary
    store.set 'weather.report', @report # store @report object into localStorage
    @updatePage()

  bootstrap: -&amp;gt;
    weather.getWeather().end (err, res)=&amp;gt;
      @getWeatherHandler(err, res)
    @report = store.get 'weather.report' # retrieve @report object from localStorage
    @updatePage()

module.exports = WeatherPanel
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The trick is to cache API call result, either by simply storing it into localStorage or add a
service worker. In our case we are storing the data into localStorage, then update the page with
the latest data from API when it becomes available.&lt;/p&gt;

&lt;h3 id="conclusion"&gt;Conclusion&lt;/h3&gt;

&lt;p&gt;This post illustrates the techniques I used when building my own &lt;a href="https://github.com/tommyku/start-page-demo"&gt;startpage demo&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Although many corners were cut to ensure timely delivery such as&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;only supports Google Chrome with flag enabling CSS Grid toggled&lt;/li&gt;
  &lt;li&gt;code not really organized by components&lt;/li&gt;
  &lt;li&gt;unmask on page loaded instead of on content loaded&lt;/li&gt;
  &lt;li&gt;wallpaper not optimized per screen size&lt;/li&gt;
  &lt;li&gt;used localStorage instead of service worker to cache API result&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;, many of the mentioned practices can be carried into general web developing and optimization.&lt;/p&gt;

&lt;p&gt;And it’s always pleasant to see &lt;em&gt;your own&lt;/em&gt; startpage isn’t?&lt;/p&gt;
</content>
  </entry>
</feed>


